"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SqlInjectionMatchSet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a WAF Regional SQL Injection Match Set Resource for use with Application Load Balancer.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const sqlInjectionMatchSet = new aws.wafregional.SqlInjectionMatchSet("sql_injection_match_set", {
 *     sqlInjectionMatchTuples: [{
 *         fieldToMatch: {
 *             type: "QUERY_STRING",
 *         },
 *         textTransformation: "URL_DECODE",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * WAF Regional Sql Injection Match Set can be imported using the id, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:wafregional/sqlInjectionMatchSet:SqlInjectionMatchSet sql_injection_match_set a1b2c3d4-d5f6-7777-8888-9999aaaabbbbcccc
 * ```
 */
class SqlInjectionMatchSet extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["name"] = state ? state.name : undefined;
            inputs["sqlInjectionMatchTuples"] = state ? state.sqlInjectionMatchTuples : undefined;
        }
        else {
            const args = argsOrState;
            inputs["name"] = args ? args.name : undefined;
            inputs["sqlInjectionMatchTuples"] = args ? args.sqlInjectionMatchTuples : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(SqlInjectionMatchSet.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing SqlInjectionMatchSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SqlInjectionMatchSet(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SqlInjectionMatchSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SqlInjectionMatchSet.__pulumiType;
    }
}
exports.SqlInjectionMatchSet = SqlInjectionMatchSet;
/** @internal */
SqlInjectionMatchSet.__pulumiType = 'aws:wafregional/sqlInjectionMatchSet:SqlInjectionMatchSet';
//# sourceMappingURL=sqlInjectionMatchSet.js.map