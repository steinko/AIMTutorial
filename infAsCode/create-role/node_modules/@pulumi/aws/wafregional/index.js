"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./byteMatchSet"), exports);
__exportStar(require("./geoMatchSet"), exports);
__exportStar(require("./getIpset"), exports);
__exportStar(require("./getRateBasedMod"), exports);
__exportStar(require("./getRule"), exports);
__exportStar(require("./getWebAcl"), exports);
__exportStar(require("./ipSet"), exports);
__exportStar(require("./rateBasedRule"), exports);
__exportStar(require("./regexMatchSet"), exports);
__exportStar(require("./regexPatternSet"), exports);
__exportStar(require("./rule"), exports);
__exportStar(require("./ruleGroup"), exports);
__exportStar(require("./sizeConstraintSet"), exports);
__exportStar(require("./sqlInjectionMatchSet"), exports);
__exportStar(require("./webAcl"), exports);
__exportStar(require("./webAclAssociation"), exports);
__exportStar(require("./xssMatchSet"), exports);
// Import resources to register:
const byteMatchSet_1 = require("./byteMatchSet");
const geoMatchSet_1 = require("./geoMatchSet");
const ipSet_1 = require("./ipSet");
const rateBasedRule_1 = require("./rateBasedRule");
const regexMatchSet_1 = require("./regexMatchSet");
const regexPatternSet_1 = require("./regexPatternSet");
const rule_1 = require("./rule");
const ruleGroup_1 = require("./ruleGroup");
const sizeConstraintSet_1 = require("./sizeConstraintSet");
const sqlInjectionMatchSet_1 = require("./sqlInjectionMatchSet");
const webAcl_1 = require("./webAcl");
const webAclAssociation_1 = require("./webAclAssociation");
const xssMatchSet_1 = require("./xssMatchSet");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:wafregional/byteMatchSet:ByteMatchSet":
                return new byteMatchSet_1.ByteMatchSet(name, undefined, { urn });
            case "aws:wafregional/geoMatchSet:GeoMatchSet":
                return new geoMatchSet_1.GeoMatchSet(name, undefined, { urn });
            case "aws:wafregional/ipSet:IpSet":
                return new ipSet_1.IpSet(name, undefined, { urn });
            case "aws:wafregional/rateBasedRule:RateBasedRule":
                return new rateBasedRule_1.RateBasedRule(name, undefined, { urn });
            case "aws:wafregional/regexMatchSet:RegexMatchSet":
                return new regexMatchSet_1.RegexMatchSet(name, undefined, { urn });
            case "aws:wafregional/regexPatternSet:RegexPatternSet":
                return new regexPatternSet_1.RegexPatternSet(name, undefined, { urn });
            case "aws:wafregional/rule:Rule":
                return new rule_1.Rule(name, undefined, { urn });
            case "aws:wafregional/ruleGroup:RuleGroup":
                return new ruleGroup_1.RuleGroup(name, undefined, { urn });
            case "aws:wafregional/sizeConstraintSet:SizeConstraintSet":
                return new sizeConstraintSet_1.SizeConstraintSet(name, undefined, { urn });
            case "aws:wafregional/sqlInjectionMatchSet:SqlInjectionMatchSet":
                return new sqlInjectionMatchSet_1.SqlInjectionMatchSet(name, undefined, { urn });
            case "aws:wafregional/webAcl:WebAcl":
                return new webAcl_1.WebAcl(name, undefined, { urn });
            case "aws:wafregional/webAclAssociation:WebAclAssociation":
                return new webAclAssociation_1.WebAclAssociation(name, undefined, { urn });
            case "aws:wafregional/xssMatchSet:XssMatchSet":
                return new xssMatchSet_1.XssMatchSet(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "wafregional/byteMatchSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/geoMatchSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/ipSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/rateBasedRule", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/regexMatchSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/regexPatternSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/rule", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/ruleGroup", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/sizeConstraintSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/sqlInjectionMatchSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/webAcl", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/webAclAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/xssMatchSet", _module);
//# sourceMappingURL=index.js.map