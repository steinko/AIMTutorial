"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.JobDefinition = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Batch Job Definition resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.batch.JobDefinition("test", {
 *     containerProperties: `{
 * 	"command": ["ls", "-la"],
 * 	"image": "busybox",
 * 	"memory": 1024,
 * 	"vcpus": 1,
 * 	"volumes": [
 *       {
 *         "host": {
 *           "sourcePath": "/tmp"
 *         },
 *         "name": "tmp"
 *       }
 *     ],
 * 	"environment": [
 * 		{"name": "VARNAME", "value": "VARVAL"}
 * 	],
 * 	"mountPoints": [
 * 		{
 *           "sourceVolume": "tmp",
 *           "containerPath": "/tmp",
 *           "readOnly": false
 *         }
 * 	],
 *     "ulimits": [
 *       {
 *         "hardLimit": 1024,
 *         "name": "nofile",
 *         "softLimit": 1024
 *       }
 *     ]
 * }
 * `,
 *     type: "container",
 * });
 * ```
 * ### Fargate Platform Capability
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const assumeRolePolicy = aws.iam.getPolicyDocument({
 *     statements: [{
 *         actions: ["sts:AssumeRole"],
 *         principals: [{
 *             type: "Service",
 *             identifiers: ["ecs-tasks.amazonaws.com"],
 *         }],
 *     }],
 * });
 * const ecsTaskExecutionRole = new aws.iam.Role("ecsTaskExecutionRole", {assumeRolePolicy: assumeRolePolicy.then(assumeRolePolicy => assumeRolePolicy.json)});
 * const ecsTaskExecutionRolePolicy = new aws.iam.RolePolicyAttachment("ecsTaskExecutionRolePolicy", {
 *     role: ecsTaskExecutionRole.name,
 *     policyArn: "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
 * });
 * const test = new aws.batch.JobDefinition("test", {
 *     type: "container",
 *     platformCapabilities: ["FARGATE"],
 *     containerProperties: pulumi.interpolate`{
 *   "command": ["echo", "test"],
 *   "image": "busybox",
 *   "fargatePlatformConfiguration": {
 *     "platformVersion": "LATEST"
 *   },
 *   "resourceRequirements": [
 *     {"type": "VCPU", "value": "0.25"},
 *     {"type": "MEMORY", "value": "512"}
 *   ],
 *   "executionRoleArn": "${ecsTaskExecutionRole.arn}"
 * }
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * Batch Job Definition can be imported using the `arn`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:batch/jobDefinition:JobDefinition test arn:aws:batch:us-east-1:123456789012:job-definition/sample
 * ```
 */
class JobDefinition extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["containerProperties"] = state ? state.containerProperties : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["parameters"] = state ? state.parameters : undefined;
            inputs["platformCapabilities"] = state ? state.platformCapabilities : undefined;
            inputs["propagateTags"] = state ? state.propagateTags : undefined;
            inputs["retryStrategy"] = state ? state.retryStrategy : undefined;
            inputs["revision"] = state ? state.revision : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tagsAll"] = state ? state.tagsAll : undefined;
            inputs["timeout"] = state ? state.timeout : undefined;
            inputs["type"] = state ? state.type : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            inputs["containerProperties"] = args ? args.containerProperties : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["parameters"] = args ? args.parameters : undefined;
            inputs["platformCapabilities"] = args ? args.platformCapabilities : undefined;
            inputs["propagateTags"] = args ? args.propagateTags : undefined;
            inputs["retryStrategy"] = args ? args.retryStrategy : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["timeout"] = args ? args.timeout : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["revision"] = undefined /*out*/;
            inputs["tagsAll"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(JobDefinition.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing JobDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new JobDefinition(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of JobDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JobDefinition.__pulumiType;
    }
}
exports.JobDefinition = JobDefinition;
/** @internal */
JobDefinition.__pulumiType = 'aws:batch/jobDefinition:JobDefinition';
//# sourceMappingURL=jobDefinition.js.map