import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * The Batch Job Queue data source allows access to details of a specific
 * job queue within AWS Batch.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test_queue = pulumi.output(aws.batch.getJobQueue({
 *     name: "tf-test-batch-job-queue",
 * }));
 * ```
 */
export declare function getJobQueue(args: GetJobQueueArgs, opts?: pulumi.InvokeOptions): Promise<GetJobQueueResult>;
/**
 * A collection of arguments for invoking getJobQueue.
 */
export interface GetJobQueueArgs {
    /**
     * The name of the job queue.
     */
    name: string;
    /**
     * Key-value map of resource tags
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getJobQueue.
 */
export interface GetJobQueueResult {
    /**
     * The ARN of the job queue.
     */
    readonly arn: string;
    /**
     * The compute environments that are attached to the job queue and the order in
     * which job placement is preferred. Compute environments are selected for job placement in ascending order.
     * * `compute_environment_order.#.order` - The order of the compute environment.
     * * `compute_environment_order.#.compute_environment` - The ARN of the compute environment.
     */
    readonly computeEnvironmentOrders: outputs.batch.GetJobQueueComputeEnvironmentOrder[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * The priority of the job queue. Job queues with a higher priority are evaluated first when
     * associated with the same compute environment.
     */
    readonly priority: number;
    /**
     * Describes the ability of the queue to accept new jobs (for example, `ENABLED` or `DISABLED`).
     */
    readonly state: string;
    /**
     * The current status of the job queue (for example, `CREATING` or `VALID`).
     */
    readonly status: string;
    /**
     * A short, human-readable string to provide additional details about the current status
     * of the job queue.
     */
    readonly statusReason: string;
    /**
     * Key-value map of resource tags
     */
    readonly tags: {
        [key: string]: string;
    };
}
export declare function getJobQueueOutput(args: GetJobQueueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJobQueueResult>;
/**
 * A collection of arguments for invoking getJobQueue.
 */
export interface GetJobQueueOutputArgs {
    /**
     * The name of the job queue.
     */
    name: pulumi.Input<string>;
    /**
     * Key-value map of resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
