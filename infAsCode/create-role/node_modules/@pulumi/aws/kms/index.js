"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./alias"), exports);
__exportStar(require("./ciphertext"), exports);
__exportStar(require("./externalKey"), exports);
__exportStar(require("./getAlias"), exports);
__exportStar(require("./getCipherText"), exports);
__exportStar(require("./getKey"), exports);
__exportStar(require("./getPublicKey"), exports);
__exportStar(require("./getSecret"), exports);
__exportStar(require("./getSecrets"), exports);
__exportStar(require("./grant"), exports);
__exportStar(require("./key"), exports);
__exportStar(require("./replicaExternalKey"), exports);
__exportStar(require("./replicaKey"), exports);
// Import resources to register:
const alias_1 = require("./alias");
const ciphertext_1 = require("./ciphertext");
const externalKey_1 = require("./externalKey");
const grant_1 = require("./grant");
const key_1 = require("./key");
const replicaExternalKey_1 = require("./replicaExternalKey");
const replicaKey_1 = require("./replicaKey");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:kms/alias:Alias":
                return new alias_1.Alias(name, undefined, { urn });
            case "aws:kms/ciphertext:Ciphertext":
                return new ciphertext_1.Ciphertext(name, undefined, { urn });
            case "aws:kms/externalKey:ExternalKey":
                return new externalKey_1.ExternalKey(name, undefined, { urn });
            case "aws:kms/grant:Grant":
                return new grant_1.Grant(name, undefined, { urn });
            case "aws:kms/key:Key":
                return new key_1.Key(name, undefined, { urn });
            case "aws:kms/replicaExternalKey:ReplicaExternalKey":
                return new replicaExternalKey_1.ReplicaExternalKey(name, undefined, { urn });
            case "aws:kms/replicaKey:ReplicaKey":
                return new replicaKey_1.ReplicaKey(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "kms/alias", _module);
pulumi.runtime.registerResourceModule("aws", "kms/ciphertext", _module);
pulumi.runtime.registerResourceModule("aws", "kms/externalKey", _module);
pulumi.runtime.registerResourceModule("aws", "kms/grant", _module);
pulumi.runtime.registerResourceModule("aws", "kms/key", _module);
pulumi.runtime.registerResourceModule("aws", "kms/replicaExternalKey", _module);
pulumi.runtime.registerResourceModule("aws", "kms/replicaKey", _module);
//# sourceMappingURL=index.js.map