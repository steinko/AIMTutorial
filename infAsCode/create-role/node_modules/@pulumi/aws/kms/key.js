"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Key = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a single-Region or multi-Region primary KMS key.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const key = new aws.kms.Key("a", {
 *     deletionWindowInDays: 10,
 *     description: "KMS key 1",
 * });
 * ```
 *
 * ## Import
 *
 * KMS Keys can be imported using the `id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:kms/key:Key a 1234abcd-12ab-34cd-56ef-1234567890ab
 * ```
 */
class Key extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["bypassPolicyLockoutSafetyCheck"] = state ? state.bypassPolicyLockoutSafetyCheck : undefined;
            inputs["customerMasterKeySpec"] = state ? state.customerMasterKeySpec : undefined;
            inputs["deletionWindowInDays"] = state ? state.deletionWindowInDays : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["enableKeyRotation"] = state ? state.enableKeyRotation : undefined;
            inputs["isEnabled"] = state ? state.isEnabled : undefined;
            inputs["keyId"] = state ? state.keyId : undefined;
            inputs["keyUsage"] = state ? state.keyUsage : undefined;
            inputs["multiRegion"] = state ? state.multiRegion : undefined;
            inputs["policy"] = state ? state.policy : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tagsAll"] = state ? state.tagsAll : undefined;
        }
        else {
            const args = argsOrState;
            inputs["bypassPolicyLockoutSafetyCheck"] = args ? args.bypassPolicyLockoutSafetyCheck : undefined;
            inputs["customerMasterKeySpec"] = args ? args.customerMasterKeySpec : undefined;
            inputs["deletionWindowInDays"] = args ? args.deletionWindowInDays : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["enableKeyRotation"] = args ? args.enableKeyRotation : undefined;
            inputs["isEnabled"] = args ? args.isEnabled : undefined;
            inputs["keyUsage"] = args ? args.keyUsage : undefined;
            inputs["multiRegion"] = args ? args.multiRegion : undefined;
            inputs["policy"] = args ? args.policy : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["keyId"] = undefined /*out*/;
            inputs["tagsAll"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Key.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Key resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Key(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Key.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Key.__pulumiType;
    }
}
exports.Key = Key;
/** @internal */
Key.__pulumiType = 'aws:kms/key:Key';
//# sourceMappingURL=key.js.map