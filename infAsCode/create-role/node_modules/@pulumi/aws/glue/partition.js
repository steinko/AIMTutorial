"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Partition = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Glue Partition Resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.glue.Partition("example", {
 *     databaseName: "some-database",
 *     tableName: "some-table",
 *     values: ["some-value"],
 * });
 * ```
 *
 * ## Import
 *
 * Glue Partitions can be imported with their catalog ID (usually AWS account ID), database name, table name and partition values e.g.,
 *
 * ```sh
 *  $ pulumi import aws:glue/partition:Partition part 123456789012:MyDatabase:MyTable:val1#val2
 * ```
 */
class Partition extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["catalogId"] = state ? state.catalogId : undefined;
            inputs["creationTime"] = state ? state.creationTime : undefined;
            inputs["databaseName"] = state ? state.databaseName : undefined;
            inputs["lastAccessedTime"] = state ? state.lastAccessedTime : undefined;
            inputs["lastAnalyzedTime"] = state ? state.lastAnalyzedTime : undefined;
            inputs["parameters"] = state ? state.parameters : undefined;
            inputs["partitionValues"] = state ? state.partitionValues : undefined;
            inputs["storageDescriptor"] = state ? state.storageDescriptor : undefined;
            inputs["tableName"] = state ? state.tableName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.databaseName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseName'");
            }
            if ((!args || args.partitionValues === undefined) && !opts.urn) {
                throw new Error("Missing required property 'partitionValues'");
            }
            if ((!args || args.tableName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tableName'");
            }
            inputs["catalogId"] = args ? args.catalogId : undefined;
            inputs["databaseName"] = args ? args.databaseName : undefined;
            inputs["parameters"] = args ? args.parameters : undefined;
            inputs["partitionValues"] = args ? args.partitionValues : undefined;
            inputs["storageDescriptor"] = args ? args.storageDescriptor : undefined;
            inputs["tableName"] = args ? args.tableName : undefined;
            inputs["creationTime"] = undefined /*out*/;
            inputs["lastAccessedTime"] = undefined /*out*/;
            inputs["lastAnalyzedTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Partition.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Partition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Partition(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Partition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Partition.__pulumiType;
    }
}
exports.Partition = Partition;
/** @internal */
Partition.__pulumiType = 'aws:glue/partition:Partition';
//# sourceMappingURL=partition.js.map