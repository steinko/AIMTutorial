"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./budgetResourceAssociation"), exports);
__exportStar(require("./constraint"), exports);
__exportStar(require("./getConstraint"), exports);
__exportStar(require("./getLaunchPaths"), exports);
__exportStar(require("./getPortfolio"), exports);
__exportStar(require("./getPortfolioConstraints"), exports);
__exportStar(require("./getProduct"), exports);
__exportStar(require("./organizationsAccess"), exports);
__exportStar(require("./portfolio"), exports);
__exportStar(require("./portfolioShare"), exports);
__exportStar(require("./principalPortfolioAssociation"), exports);
__exportStar(require("./product"), exports);
__exportStar(require("./productPortfolioAssociation"), exports);
__exportStar(require("./provisionedProduct"), exports);
__exportStar(require("./provisioningArtifact"), exports);
__exportStar(require("./serviceAction"), exports);
__exportStar(require("./tagOption"), exports);
__exportStar(require("./tagOptionResourceAssociation"), exports);
// Import resources to register:
const budgetResourceAssociation_1 = require("./budgetResourceAssociation");
const constraint_1 = require("./constraint");
const organizationsAccess_1 = require("./organizationsAccess");
const portfolio_1 = require("./portfolio");
const portfolioShare_1 = require("./portfolioShare");
const principalPortfolioAssociation_1 = require("./principalPortfolioAssociation");
const product_1 = require("./product");
const productPortfolioAssociation_1 = require("./productPortfolioAssociation");
const provisionedProduct_1 = require("./provisionedProduct");
const provisioningArtifact_1 = require("./provisioningArtifact");
const serviceAction_1 = require("./serviceAction");
const tagOption_1 = require("./tagOption");
const tagOptionResourceAssociation_1 = require("./tagOptionResourceAssociation");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:servicecatalog/budgetResourceAssociation:BudgetResourceAssociation":
                return new budgetResourceAssociation_1.BudgetResourceAssociation(name, undefined, { urn });
            case "aws:servicecatalog/constraint:Constraint":
                return new constraint_1.Constraint(name, undefined, { urn });
            case "aws:servicecatalog/organizationsAccess:OrganizationsAccess":
                return new organizationsAccess_1.OrganizationsAccess(name, undefined, { urn });
            case "aws:servicecatalog/portfolio:Portfolio":
                return new portfolio_1.Portfolio(name, undefined, { urn });
            case "aws:servicecatalog/portfolioShare:PortfolioShare":
                return new portfolioShare_1.PortfolioShare(name, undefined, { urn });
            case "aws:servicecatalog/principalPortfolioAssociation:PrincipalPortfolioAssociation":
                return new principalPortfolioAssociation_1.PrincipalPortfolioAssociation(name, undefined, { urn });
            case "aws:servicecatalog/product:Product":
                return new product_1.Product(name, undefined, { urn });
            case "aws:servicecatalog/productPortfolioAssociation:ProductPortfolioAssociation":
                return new productPortfolioAssociation_1.ProductPortfolioAssociation(name, undefined, { urn });
            case "aws:servicecatalog/provisionedProduct:ProvisionedProduct":
                return new provisionedProduct_1.ProvisionedProduct(name, undefined, { urn });
            case "aws:servicecatalog/provisioningArtifact:ProvisioningArtifact":
                return new provisioningArtifact_1.ProvisioningArtifact(name, undefined, { urn });
            case "aws:servicecatalog/serviceAction:ServiceAction":
                return new serviceAction_1.ServiceAction(name, undefined, { urn });
            case "aws:servicecatalog/tagOption:TagOption":
                return new tagOption_1.TagOption(name, undefined, { urn });
            case "aws:servicecatalog/tagOptionResourceAssociation:TagOptionResourceAssociation":
                return new tagOptionResourceAssociation_1.TagOptionResourceAssociation(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "servicecatalog/budgetResourceAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/constraint", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/organizationsAccess", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/portfolio", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/portfolioShare", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/principalPortfolioAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/product", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/productPortfolioAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/provisionedProduct", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/provisioningArtifact", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/serviceAction", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/tagOption", _module);
pulumi.runtime.registerResourceModule("aws", "servicecatalog/tagOptionResourceAssociation", _module);
//# sourceMappingURL=index.js.map