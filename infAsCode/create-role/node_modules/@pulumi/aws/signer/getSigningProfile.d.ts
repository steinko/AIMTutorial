import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Provides information about a Signer Signing Profile.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const productionSigningProfile = pulumi.output(aws.signer.getSigningProfile({
 *     name: "prod_profile_DdW3Mk1foYL88fajut4mTVFGpuwfd4ACO6ANL0D1uIj7lrn8adK",
 * }));
 * ```
 */
export declare function getSigningProfile(args: GetSigningProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetSigningProfileResult>;
/**
 * A collection of arguments for invoking getSigningProfile.
 */
export interface GetSigningProfileArgs {
    /**
     * The name of the target signing profile.
     */
    name: string;
    /**
     * A list of tags associated with the signing profile.
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getSigningProfile.
 */
export interface GetSigningProfileResult {
    /**
     * The Amazon Resource Name (ARN) for the signing profile.
     */
    readonly arn: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * A human-readable name for the signing platform associated with the signing profile.
     */
    readonly platformDisplayName: string;
    /**
     * The ID of the platform that is used by the target signing profile.
     */
    readonly platformId: string;
    /**
     * Revocation information for a signing profile.
     */
    readonly revocationRecords: outputs.signer.GetSigningProfileRevocationRecord[];
    /**
     * The validity period for a signing job.
     */
    readonly signatureValidityPeriods: outputs.signer.GetSigningProfileSignatureValidityPeriod[];
    /**
     * The status of the target signing profile.
     */
    readonly status: string;
    /**
     * A list of tags associated with the signing profile.
     */
    readonly tags: {
        [key: string]: string;
    };
    /**
     * The current version of the signing profile.
     */
    readonly version: string;
    /**
     * The signing profile ARN, including the profile version.
     */
    readonly versionArn: string;
}
export declare function getSigningProfileOutput(args: GetSigningProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSigningProfileResult>;
/**
 * A collection of arguments for invoking getSigningProfile.
 */
export interface GetSigningProfileOutputArgs {
    /**
     * The name of the target signing profile.
     */
    name: pulumi.Input<string>;
    /**
     * A list of tags associated with the signing profile.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
