import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Get attributes of AWS Directory Service directory (SimpleAD, Managed AD, AD Connector). It's especially useful to refer AWS Managed AD or on-premise AD in AD Connector configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.directoryservice.getDirectory({
 *     directoryId: aws_directory_service_directory.main.id,
 * });
 * ```
 */
export declare function getDirectory(args: GetDirectoryArgs, opts?: pulumi.InvokeOptions): Promise<GetDirectoryResult>;
/**
 * A collection of arguments for invoking getDirectory.
 */
export interface GetDirectoryArgs {
    /**
     * The ID of the directory.
     */
    directoryId: string;
    /**
     * A map of tags assigned to the directory/connector.
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getDirectory.
 */
export interface GetDirectoryResult {
    /**
     * The access URL for the directory/connector, such as http://alias.awsapps.com.
     */
    readonly accessUrl: string;
    /**
     * The alias for the directory/connector, such as `d-991708b282.awsapps.com`.
     */
    readonly alias: string;
    readonly connectSettings: outputs.directoryservice.GetDirectoryConnectSetting[];
    /**
     * A textual description for the directory/connector.
     */
    readonly description: string;
    readonly directoryId: string;
    /**
     * A list of IP addresses of the DNS servers for the directory/connector.
     */
    readonly dnsIpAddresses: string[];
    /**
     * (for `MicrosoftAD`) The Microsoft AD edition (`Standard` or `Enterprise`).
     */
    readonly edition: string;
    /**
     * The directory/connector single-sign on status.
     */
    readonly enableSso: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The fully qualified name for the directory/connector.
     */
    readonly name: string;
    /**
     * The ID of the security group created by the directory/connector.
     */
    readonly securityGroupId: string;
    /**
     * The short name of the directory/connector, such as `CORP`.
     */
    readonly shortName: string;
    /**
     * (for `SimpleAD` and `ADConnector`) The size of the directory/connector (`Small` or `Large`).
     */
    readonly size: string;
    /**
     * A map of tags assigned to the directory/connector.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD`).
     */
    readonly type: string;
    readonly vpcSettings: outputs.directoryservice.GetDirectoryVpcSetting[];
}
export declare function getDirectoryOutput(args: GetDirectoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDirectoryResult>;
/**
 * A collection of arguments for invoking getDirectory.
 */
export interface GetDirectoryOutputArgs {
    /**
     * The ID of the directory.
     */
    directoryId: pulumi.Input<string>;
    /**
     * A map of tags assigned to the directory/connector.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
