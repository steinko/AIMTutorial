"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Member = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to manage a GuardDuty member. To accept invitations in member accounts, see the `aws.guardduty.InviteAccepter` resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const primary = new aws.guardduty.Detector("primary", {enable: true});
 * const memberDetector = new aws.guardduty.Detector("memberDetector", {enable: true}, {
 *     provider: aws.dev,
 * });
 * const memberMember = new aws.guardduty.Member("memberMember", {
 *     accountId: memberDetector.accountId,
 *     detectorId: primary.id,
 *     email: "required@example.com",
 *     invite: true,
 *     invitationMessage: "please accept guardduty invitation",
 * });
 * ```
 *
 * ## Import
 *
 * GuardDuty members can be imported using the the primary GuardDuty detector ID and member AWS account ID, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:guardduty/member:Member MyMember 00b00fd5aecc0ab60a708659477e9617:123456789012
 * ```
 */
class Member extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["accountId"] = state ? state.accountId : undefined;
            inputs["detectorId"] = state ? state.detectorId : undefined;
            inputs["disableEmailNotification"] = state ? state.disableEmailNotification : undefined;
            inputs["email"] = state ? state.email : undefined;
            inputs["invitationMessage"] = state ? state.invitationMessage : undefined;
            inputs["invite"] = state ? state.invite : undefined;
            inputs["relationshipStatus"] = state ? state.relationshipStatus : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.detectorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'detectorId'");
            }
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            inputs["accountId"] = args ? args.accountId : undefined;
            inputs["detectorId"] = args ? args.detectorId : undefined;
            inputs["disableEmailNotification"] = args ? args.disableEmailNotification : undefined;
            inputs["email"] = args ? args.email : undefined;
            inputs["invitationMessage"] = args ? args.invitationMessage : undefined;
            inputs["invite"] = args ? args.invite : undefined;
            inputs["relationshipStatus"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Member.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Member resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Member(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Member.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Member.__pulumiType;
    }
}
exports.Member = Member;
/** @internal */
Member.__pulumiType = 'aws:guardduty/member:Member';
//# sourceMappingURL=member.js.map