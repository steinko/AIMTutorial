"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SshKey = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Uploads an SSH public key and associates it with the specified IAM user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const userUser = new aws.iam.User("userUser", {path: "/"});
 * const userSshKey = new aws.iam.SshKey("userSshKey", {
 *     username: userUser.name,
 *     encoding: "SSH",
 *     publicKey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 mytest@mydomain.com",
 * });
 * ```
 *
 * ## Import
 *
 * SSH public keys can be imported using the `username`, `ssh_public_key_id`, and `encoding` e.g.,
 *
 * ```sh
 *  $ pulumi import aws:iam/sshKey:SshKey user user:APKAJNCNNJICVN7CFKCA:SSH
 * ```
 */
class SshKey extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["encoding"] = state ? state.encoding : undefined;
            inputs["fingerprint"] = state ? state.fingerprint : undefined;
            inputs["publicKey"] = state ? state.publicKey : undefined;
            inputs["sshPublicKeyId"] = state ? state.sshPublicKeyId : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["username"] = state ? state.username : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.encoding === undefined) && !opts.urn) {
                throw new Error("Missing required property 'encoding'");
            }
            if ((!args || args.publicKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publicKey'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            inputs["encoding"] = args ? args.encoding : undefined;
            inputs["publicKey"] = args ? args.publicKey : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["username"] = args ? args.username : undefined;
            inputs["fingerprint"] = undefined /*out*/;
            inputs["sshPublicKeyId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(SshKey.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing SshKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SshKey(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SshKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SshKey.__pulumiType;
    }
}
exports.SshKey = SshKey;
/** @internal */
SshKey.__pulumiType = 'aws:iam/sshKey:SshKey';
//# sourceMappingURL=sshKey.js.map