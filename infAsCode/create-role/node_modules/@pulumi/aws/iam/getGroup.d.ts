import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * This data source can be used to fetch information about a specific
 * IAM group. By using this data source, you can reference IAM group
 * properties without having to hard code ARNs as input.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.iam.getGroup({
 *     groupName: "an_example_group_name",
 * }));
 * ```
 */
export declare function getGroup(args: GetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResult>;
/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupArgs {
    /**
     * The friendly IAM group name to match.
     */
    groupName: string;
}
/**
 * A collection of values returned by getGroup.
 */
export interface GetGroupResult {
    /**
     * The Amazon Resource Name (ARN) specifying the iam user.
     */
    readonly arn: string;
    /**
     * The stable and unique string identifying the group.
     */
    readonly groupId: string;
    readonly groupName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The path to the iam user.
     */
    readonly path: string;
    /**
     * List of objects containing group member information. See supported fields below.
     */
    readonly users: outputs.iam.GetGroupUser[];
}
export declare function getGroupOutput(args: GetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResult>;
/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupOutputArgs {
    /**
     * The friendly IAM group name to match.
     */
    groupName: pulumi.Input<string>;
}
