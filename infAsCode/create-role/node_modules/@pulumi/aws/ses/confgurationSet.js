"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfgurationSet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an SES configuration set resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ses.ConfigurationSet("test", {});
 * ```
 * ### Require TLS Connections
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ses.ConfigurationSet("test", {
 *     deliveryOptions: {
 *         tlsPolicy: "Require",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * SES Configuration Sets can be imported using their `name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:ses/confgurationSet:ConfgurationSet test some-configuration-set-test
 * ```
 *
 * @deprecated aws.ses.ConfgurationSet has been deprecated in favor of aws.ses.ConfigurationSet
 */
class ConfgurationSet extends pulumi.CustomResource {
    /** @deprecated aws.ses.ConfgurationSet has been deprecated in favor of aws.ses.ConfigurationSet */
    constructor(name, argsOrState, opts) {
        pulumi.log.warn("ConfgurationSet is deprecated: aws.ses.ConfgurationSet has been deprecated in favor of aws.ses.ConfigurationSet");
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["deliveryOptions"] = state ? state.deliveryOptions : undefined;
            inputs["lastFreshStart"] = state ? state.lastFreshStart : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["reputationMetricsEnabled"] = state ? state.reputationMetricsEnabled : undefined;
            inputs["sendingEnabled"] = state ? state.sendingEnabled : undefined;
        }
        else {
            const args = argsOrState;
            inputs["deliveryOptions"] = args ? args.deliveryOptions : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["reputationMetricsEnabled"] = args ? args.reputationMetricsEnabled : undefined;
            inputs["sendingEnabled"] = args ? args.sendingEnabled : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["lastFreshStart"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(ConfgurationSet.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ConfgurationSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        pulumi.log.warn("ConfgurationSet is deprecated: aws.ses.ConfgurationSet has been deprecated in favor of aws.ses.ConfigurationSet");
        return new ConfgurationSet(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ConfgurationSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfgurationSet.__pulumiType;
    }
}
exports.ConfgurationSet = ConfgurationSet;
/** @internal */
ConfgurationSet.__pulumiType = 'aws:ses/confgurationSet:ConfgurationSet';
//# sourceMappingURL=confgurationSet.js.map