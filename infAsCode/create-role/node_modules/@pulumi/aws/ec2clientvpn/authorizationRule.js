"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorizationRule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides authorization rules for AWS Client VPN endpoints. For more information on usage, please see the
 * [AWS Client VPN Administrator's Guide](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/what-is.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ec2clientvpn.AuthorizationRule("example", {
 *     clientVpnEndpointId: aws_ec2_client_vpn_endpoint.example.id,
 *     targetNetworkCidr: aws_subnet.example.cidr_block,
 *     authorizeAllGroups: true,
 * });
 * ```
 *
 * ## Import
 *
 * AWS Client VPN authorization rules can be imported using the endpoint ID and target network CIDR. If there is a specific group name that is included as well. All values are separated by a `,`.
 *
 * ```sh
 *  $ pulumi import aws:ec2clientvpn/authorizationRule:AuthorizationRule example cvpn-endpoint-0ac3a1abbccddd666,10.1.0.0/24
 * ```
 *
 * ```sh
 *  $ pulumi import aws:ec2clientvpn/authorizationRule:AuthorizationRule example cvpn-endpoint-0ac3a1abbccddd666,10.1.0.0/24,team-a
 * ```
 */
class AuthorizationRule extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["accessGroupId"] = state ? state.accessGroupId : undefined;
            inputs["authorizeAllGroups"] = state ? state.authorizeAllGroups : undefined;
            inputs["clientVpnEndpointId"] = state ? state.clientVpnEndpointId : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["targetNetworkCidr"] = state ? state.targetNetworkCidr : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.clientVpnEndpointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientVpnEndpointId'");
            }
            if ((!args || args.targetNetworkCidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetNetworkCidr'");
            }
            inputs["accessGroupId"] = args ? args.accessGroupId : undefined;
            inputs["authorizeAllGroups"] = args ? args.authorizeAllGroups : undefined;
            inputs["clientVpnEndpointId"] = args ? args.clientVpnEndpointId : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["targetNetworkCidr"] = args ? args.targetNetworkCidr : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(AuthorizationRule.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing AuthorizationRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AuthorizationRule(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AuthorizationRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthorizationRule.__pulumiType;
    }
}
exports.AuthorizationRule = AuthorizationRule;
/** @internal */
AuthorizationRule.__pulumiType = 'aws:ec2clientvpn/authorizationRule:AuthorizationRule';
//# sourceMappingURL=authorizationRule.js.map