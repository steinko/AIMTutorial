"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./bgpPeer"), exports);
__exportStar(require("./connection"), exports);
__exportStar(require("./connectionAssociation"), exports);
__exportStar(require("./connectionConfirmation"), exports);
__exportStar(require("./gateway"), exports);
__exportStar(require("./gatewayAssociation"), exports);
__exportStar(require("./gatewayAssociationProposal"), exports);
__exportStar(require("./getConnection"), exports);
__exportStar(require("./getGateway"), exports);
__exportStar(require("./getLocation"), exports);
__exportStar(require("./getLocations"), exports);
__exportStar(require("./hostedConnection"), exports);
__exportStar(require("./hostedPrivateVirtualInterface"), exports);
__exportStar(require("./hostedPrivateVirtualInterfaceAccepter"), exports);
__exportStar(require("./hostedPublicVirtualInterface"), exports);
__exportStar(require("./hostedPublicVirtualInterfaceAccepter"), exports);
__exportStar(require("./hostedTransitVirtualInterface"), exports);
__exportStar(require("./hostedTransitVirtualInterfaceAcceptor"), exports);
__exportStar(require("./linkAggregationGroup"), exports);
__exportStar(require("./privateVirtualInterface"), exports);
__exportStar(require("./publicVirtualInterface"), exports);
__exportStar(require("./transitVirtualInterface"), exports);
// Import resources to register:
const bgpPeer_1 = require("./bgpPeer");
const connection_1 = require("./connection");
const connectionAssociation_1 = require("./connectionAssociation");
const connectionConfirmation_1 = require("./connectionConfirmation");
const gateway_1 = require("./gateway");
const gatewayAssociation_1 = require("./gatewayAssociation");
const gatewayAssociationProposal_1 = require("./gatewayAssociationProposal");
const hostedConnection_1 = require("./hostedConnection");
const hostedPrivateVirtualInterface_1 = require("./hostedPrivateVirtualInterface");
const hostedPrivateVirtualInterfaceAccepter_1 = require("./hostedPrivateVirtualInterfaceAccepter");
const hostedPublicVirtualInterface_1 = require("./hostedPublicVirtualInterface");
const hostedPublicVirtualInterfaceAccepter_1 = require("./hostedPublicVirtualInterfaceAccepter");
const hostedTransitVirtualInterface_1 = require("./hostedTransitVirtualInterface");
const hostedTransitVirtualInterfaceAcceptor_1 = require("./hostedTransitVirtualInterfaceAcceptor");
const linkAggregationGroup_1 = require("./linkAggregationGroup");
const privateVirtualInterface_1 = require("./privateVirtualInterface");
const publicVirtualInterface_1 = require("./publicVirtualInterface");
const transitVirtualInterface_1 = require("./transitVirtualInterface");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:directconnect/bgpPeer:BgpPeer":
                return new bgpPeer_1.BgpPeer(name, undefined, { urn });
            case "aws:directconnect/connection:Connection":
                return new connection_1.Connection(name, undefined, { urn });
            case "aws:directconnect/connectionAssociation:ConnectionAssociation":
                return new connectionAssociation_1.ConnectionAssociation(name, undefined, { urn });
            case "aws:directconnect/connectionConfirmation:ConnectionConfirmation":
                return new connectionConfirmation_1.ConnectionConfirmation(name, undefined, { urn });
            case "aws:directconnect/gateway:Gateway":
                return new gateway_1.Gateway(name, undefined, { urn });
            case "aws:directconnect/gatewayAssociation:GatewayAssociation":
                return new gatewayAssociation_1.GatewayAssociation(name, undefined, { urn });
            case "aws:directconnect/gatewayAssociationProposal:GatewayAssociationProposal":
                return new gatewayAssociationProposal_1.GatewayAssociationProposal(name, undefined, { urn });
            case "aws:directconnect/hostedConnection:HostedConnection":
                return new hostedConnection_1.HostedConnection(name, undefined, { urn });
            case "aws:directconnect/hostedPrivateVirtualInterface:HostedPrivateVirtualInterface":
                return new hostedPrivateVirtualInterface_1.HostedPrivateVirtualInterface(name, undefined, { urn });
            case "aws:directconnect/hostedPrivateVirtualInterfaceAccepter:HostedPrivateVirtualInterfaceAccepter":
                return new hostedPrivateVirtualInterfaceAccepter_1.HostedPrivateVirtualInterfaceAccepter(name, undefined, { urn });
            case "aws:directconnect/hostedPublicVirtualInterface:HostedPublicVirtualInterface":
                return new hostedPublicVirtualInterface_1.HostedPublicVirtualInterface(name, undefined, { urn });
            case "aws:directconnect/hostedPublicVirtualInterfaceAccepter:HostedPublicVirtualInterfaceAccepter":
                return new hostedPublicVirtualInterfaceAccepter_1.HostedPublicVirtualInterfaceAccepter(name, undefined, { urn });
            case "aws:directconnect/hostedTransitVirtualInterface:HostedTransitVirtualInterface":
                return new hostedTransitVirtualInterface_1.HostedTransitVirtualInterface(name, undefined, { urn });
            case "aws:directconnect/hostedTransitVirtualInterfaceAcceptor:HostedTransitVirtualInterfaceAcceptor":
                return new hostedTransitVirtualInterfaceAcceptor_1.HostedTransitVirtualInterfaceAcceptor(name, undefined, { urn });
            case "aws:directconnect/linkAggregationGroup:LinkAggregationGroup":
                return new linkAggregationGroup_1.LinkAggregationGroup(name, undefined, { urn });
            case "aws:directconnect/privateVirtualInterface:PrivateVirtualInterface":
                return new privateVirtualInterface_1.PrivateVirtualInterface(name, undefined, { urn });
            case "aws:directconnect/publicVirtualInterface:PublicVirtualInterface":
                return new publicVirtualInterface_1.PublicVirtualInterface(name, undefined, { urn });
            case "aws:directconnect/transitVirtualInterface:TransitVirtualInterface":
                return new transitVirtualInterface_1.TransitVirtualInterface(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "directconnect/bgpPeer", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/connection", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/connectionAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/connectionConfirmation", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/gateway", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/gatewayAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/gatewayAssociationProposal", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedConnection", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedPrivateVirtualInterface", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedPrivateVirtualInterfaceAccepter", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedPublicVirtualInterface", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedPublicVirtualInterfaceAccepter", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedTransitVirtualInterface", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/hostedTransitVirtualInterfaceAcceptor", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/linkAggregationGroup", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/privateVirtualInterface", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/publicVirtualInterface", _module);
pulumi.runtime.registerResourceModule("aws", "directconnect/transitVirtualInterface", _module);
//# sourceMappingURL=index.js.map