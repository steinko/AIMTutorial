"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workteam = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Sagemaker Workteam resource.
 *
 * ## Example Usage
 * ### Cognito Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sagemaker.Workteam("example", {
 *     workteamName: "example",
 *     workforceName: aws_sagemaker_workforce.example.id,
 *     description: "example",
 *     memberDefinitions: [{
 *         cognitoMemberDefinition: {
 *             clientId: aws_cognito_user_pool_client.example.id,
 *             userPool: aws_cognito_user_pool_domain.example.user_pool_id,
 *             userGroup: aws_cognito_user_group.example.id,
 *         },
 *     }],
 * });
 * ```
 * ### Oidc Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sagemaker.Workteam("example", {
 *     workteamName: "example",
 *     workforceName: aws_sagemaker_workforce.example.id,
 *     description: "example",
 *     memberDefinitions: [{
 *         oidcMemberDefinition: {
 *             groups: ["example"],
 *         },
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Sagemaker Workteams can be imported using the `workteam_name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:sagemaker/workteam:Workteam example example
 * ```
 */
class Workteam extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["memberDefinitions"] = state ? state.memberDefinitions : undefined;
            inputs["notificationConfiguration"] = state ? state.notificationConfiguration : undefined;
            inputs["subdomain"] = state ? state.subdomain : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tagsAll"] = state ? state.tagsAll : undefined;
            inputs["workforceName"] = state ? state.workforceName : undefined;
            inputs["workteamName"] = state ? state.workteamName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.memberDefinitions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memberDefinitions'");
            }
            if ((!args || args.workforceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workforceName'");
            }
            if ((!args || args.workteamName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workteamName'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["memberDefinitions"] = args ? args.memberDefinitions : undefined;
            inputs["notificationConfiguration"] = args ? args.notificationConfiguration : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["workforceName"] = args ? args.workforceName : undefined;
            inputs["workteamName"] = args ? args.workteamName : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["subdomain"] = undefined /*out*/;
            inputs["tagsAll"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Workteam.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Workteam resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Workteam(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Workteam.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workteam.__pulumiType;
    }
}
exports.Workteam = Workteam;
/** @internal */
Workteam.__pulumiType = 'aws:sagemaker/workteam:Workteam';
//# sourceMappingURL=workteam.js.map