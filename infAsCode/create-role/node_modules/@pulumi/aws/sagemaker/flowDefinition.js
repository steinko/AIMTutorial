"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.FlowDefinition = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Sagemaker Flow Definition resource.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sagemaker.FlowDefinition("example", {
 *     flowDefinitionName: "example",
 *     roleArn: aws_iam_role.example.arn,
 *     humanLoopConfig: {
 *         humanTaskUiArn: aws_sagemaker_human_task_ui.example.arn,
 *         taskAvailabilityLifetimeInSeconds: 1,
 *         taskCount: 1,
 *         taskDescription: "example",
 *         taskTitle: "example",
 *         workteamArn: aws_sagemaker_workteam.example.arn,
 *     },
 *     outputConfig: {
 *         s3OutputPath: `s3://${aws_s3_bucket.example.bucket}/`,
 *     },
 * });
 * ```
 * ### Public Workteam Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sagemaker.FlowDefinition("example", {
 *     flowDefinitionName: "example",
 *     roleArn: aws_iam_role.example.arn,
 *     humanLoopConfig: {
 *         humanTaskUiArn: aws_sagemaker_human_task_ui.example.arn,
 *         taskAvailabilityLifetimeInSeconds: 1,
 *         taskCount: 1,
 *         taskDescription: "example",
 *         taskTitle: "example",
 *         workteamArn: `arn:aws:sagemaker:${data.aws_region.current.name}:394669845002:workteam/public-crowd/default`,
 *         publicWorkforceTaskPrice: {
 *             amountInUsd: {
 *                 cents: 1,
 *                 tenthFractionsOfACent: 2,
 *             },
 *         },
 *     },
 *     outputConfig: {
 *         s3OutputPath: `s3://${aws_s3_bucket.example.bucket}/`,
 *     },
 * });
 * ```
 * ### Human Loop Activation Config Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sagemaker.FlowDefinition("example", {
 *     flowDefinitionName: "example",
 *     roleArn: aws_iam_role.example.arn,
 *     humanLoopConfig: {
 *         humanTaskUiArn: aws_sagemaker_human_task_ui.example.arn,
 *         taskAvailabilityLifetimeInSeconds: 1,
 *         taskCount: 1,
 *         taskDescription: "example",
 *         taskTitle: "example",
 *         workteamArn: aws_sagemaker_workteam.example.arn,
 *     },
 *     humanLoopRequestSource: {
 *         awsManagedHumanLoopRequestSource: "AWS/Textract/AnalyzeDocument/Forms/V1",
 *     },
 *     humanLoopActivationConfig: {
 *         humanLoopActivationConditionsConfig: {
 *             humanLoopActivationConditions: `        {
 * 			"Conditions": [
 * 			  {
 * 				"ConditionType": "Sampling",
 * 				"ConditionParameters": {
 * 				  "RandomSamplingPercentage": 5
 * 				}
 * 			  }
 * 			]
 * 		}
 * `,
 *         },
 *     },
 *     outputConfig: {
 *         s3OutputPath: `s3://${aws_s3_bucket.example.bucket}/`,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Sagemaker Flow Definitions can be imported using the `flow_definition_name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:sagemaker/flowDefinition:FlowDefinition example example
 * ```
 */
class FlowDefinition extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["flowDefinitionName"] = state ? state.flowDefinitionName : undefined;
            inputs["humanLoopActivationConfig"] = state ? state.humanLoopActivationConfig : undefined;
            inputs["humanLoopConfig"] = state ? state.humanLoopConfig : undefined;
            inputs["humanLoopRequestSource"] = state ? state.humanLoopRequestSource : undefined;
            inputs["outputConfig"] = state ? state.outputConfig : undefined;
            inputs["roleArn"] = state ? state.roleArn : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tagsAll"] = state ? state.tagsAll : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.flowDefinitionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flowDefinitionName'");
            }
            if ((!args || args.humanLoopConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'humanLoopConfig'");
            }
            if ((!args || args.outputConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'outputConfig'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            inputs["flowDefinitionName"] = args ? args.flowDefinitionName : undefined;
            inputs["humanLoopActivationConfig"] = args ? args.humanLoopActivationConfig : undefined;
            inputs["humanLoopConfig"] = args ? args.humanLoopConfig : undefined;
            inputs["humanLoopRequestSource"] = args ? args.humanLoopRequestSource : undefined;
            inputs["outputConfig"] = args ? args.outputConfig : undefined;
            inputs["roleArn"] = args ? args.roleArn : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["tagsAll"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(FlowDefinition.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing FlowDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new FlowDefinition(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of FlowDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlowDefinition.__pulumiType;
    }
}
exports.FlowDefinition = FlowDefinition;
/** @internal */
FlowDefinition.__pulumiType = 'aws:sagemaker/flowDefinition:FlowDefinition';
//# sourceMappingURL=flowDefinition.js.map