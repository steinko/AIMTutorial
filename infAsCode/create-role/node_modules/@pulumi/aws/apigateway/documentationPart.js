"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocumentationPart = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a settings of an API Gateway Documentation Part.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleRestApi = new aws.apigateway.RestApi("exampleRestApi", {});
 * const exampleDocumentationPart = new aws.apigateway.DocumentationPart("exampleDocumentationPart", {
 *     location: {
 *         type: "METHOD",
 *         method: "GET",
 *         path: "/example",
 *     },
 *     properties: "{\"description\":\"Example description\"}",
 *     restApiId: exampleRestApi.id,
 * });
 * ```
 *
 * ## Import
 *
 * API Gateway documentation_parts can be imported using `REST-API-ID/DOC-PART-ID`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:apigateway/documentationPart:DocumentationPart example 5i4e1ko720/3oyy3t
 * ```
 */
class DocumentationPart extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["location"] = state ? state.location : undefined;
            inputs["properties"] = state ? state.properties : undefined;
            inputs["restApiId"] = state ? state.restApiId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.properties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'properties'");
            }
            if ((!args || args.restApiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restApiId'");
            }
            inputs["location"] = args ? args.location : undefined;
            inputs["properties"] = args ? args.properties : undefined;
            inputs["restApiId"] = args ? args.restApiId : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(DocumentationPart.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing DocumentationPart resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DocumentationPart(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DocumentationPart.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DocumentationPart.__pulumiType;
    }
}
exports.DocumentationPart = DocumentationPart;
/** @internal */
DocumentationPart.__pulumiType = 'aws:apigateway/documentationPart:DocumentationPart';
//# sourceMappingURL=documentationPart.js.map