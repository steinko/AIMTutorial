import * as pulumi from "@pulumi/pulumi";
import { RestApi } from "./index";
/**
 * Provides a Model for a REST API Gateway.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const myDemoAPI = new aws.apigateway.RestApi("myDemoAPI", {description: "This is my API for demonstration purposes"});
 * const myDemoModel = new aws.apigateway.Model("myDemoModel", {
 *     restApi: myDemoAPI.id,
 *     description: "a JSON schema",
 *     contentType: "application/json",
 *     schema: `{
 *   "type": "object"
 * }
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * `aws_api_gateway_model` can be imported using `REST-API-ID/NAME`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:apigateway/model:Model example 12345abcde/example
 * ```
 */
export declare class Model extends pulumi.CustomResource {
    /**
     * Get an existing Model resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ModelState, opts?: pulumi.CustomResourceOptions): Model;
    /**
     * Returns true if the given object is an instance of Model.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Model;
    /**
     * The content type of the model
     */
    readonly contentType: pulumi.Output<string>;
    /**
     * The description of the model
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the model
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the associated REST API
     */
    readonly restApi: pulumi.Output<string>;
    /**
     * The schema of the model in a JSON form
     */
    readonly schema: pulumi.Output<string | undefined>;
    /**
     * Create a Model resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ModelArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Model resources.
 */
export interface ModelState {
    /**
     * The content type of the model
     */
    contentType?: pulumi.Input<string>;
    /**
     * The description of the model
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the model
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the associated REST API
     */
    restApi?: pulumi.Input<string | RestApi>;
    /**
     * The schema of the model in a JSON form
     */
    schema?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Model resource.
 */
export interface ModelArgs {
    /**
     * The content type of the model
     */
    contentType: pulumi.Input<string>;
    /**
     * The description of the model
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the model
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the associated REST API
     */
    restApi: pulumi.Input<string | RestApi>;
    /**
     * The schema of the model in a JSON form
     */
    schema?: pulumi.Input<string>;
}
