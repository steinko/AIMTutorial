"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResponseHeadersPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a CloudFront response headers policy resource.
 * A response headers policy contains information about a set of HTTP response headers and their values.
 * After you create a response headers policy, you can use its ID to attach it to one or more cache behaviors in a CloudFront distribution.
 * When itâ€™s attached to a cache behavior, CloudFront adds the headers in the policy to every response that it sends for requests that match the cache behavior.
 *
 * ## Example Usage
 *
 * The example below creates a CloudFront response headers policy.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.cloudfront.ResponseHeadersPolicy("example", {
 *     comment: "test comment",
 *     corsConfig: {
 *         accessControlAllowCredentials: true,
 *         accessControlAllowHeaders: {
 *             items: ["test"],
 *         },
 *         accessControlAllowMethods: {
 *             items: ["GET"],
 *         },
 *         accessControlAllowOrigins: {
 *             items: ["test.example.comtest"],
 *         },
 *         originOverride: true,
 *     },
 * });
 * ```
 *
 * The example below creates a CloudFront response headers policy with a custom headers config.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.cloudfront.ResponseHeadersPolicy("example", {
 *     customHeadersConfig: {
 *         items: [
 *             {
 *                 header: "X-Permitted-Cross-Domain-Policies",
 *                 override: true,
 *                 value: "none",
 *             },
 *             {
 *                 header: "X-Test",
 *                 override: true,
 *                 value: "none",
 *             },
 *         ],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Cloudfront Response Headers Policies can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:cloudfront/responseHeadersPolicy:ResponseHeadersPolicy policy 658327ea-f89d-4fab-a63d-7e88639e58f9
 * ```
 */
class ResponseHeadersPolicy extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["comment"] = state ? state.comment : undefined;
            inputs["corsConfig"] = state ? state.corsConfig : undefined;
            inputs["customHeadersConfig"] = state ? state.customHeadersConfig : undefined;
            inputs["etag"] = state ? state.etag : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["securityHeadersConfig"] = state ? state.securityHeadersConfig : undefined;
        }
        else {
            const args = argsOrState;
            inputs["comment"] = args ? args.comment : undefined;
            inputs["corsConfig"] = args ? args.corsConfig : undefined;
            inputs["customHeadersConfig"] = args ? args.customHeadersConfig : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["securityHeadersConfig"] = args ? args.securityHeadersConfig : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(ResponseHeadersPolicy.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ResponseHeadersPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ResponseHeadersPolicy(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ResponseHeadersPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResponseHeadersPolicy.__pulumiType;
    }
}
exports.ResponseHeadersPolicy = ResponseHeadersPolicy;
/** @internal */
ResponseHeadersPolicy.__pulumiType = 'aws:cloudfront/responseHeadersPolicy:ResponseHeadersPolicy';
//# sourceMappingURL=responseHeadersPolicy.js.map