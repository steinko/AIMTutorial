import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Use this data source to retrieve information about a CloudFront cache policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.cloudfront.getCachePolicy({
 *     name: "example-policy",
 * }));
 * ```
 */
export declare function getCachePolicy(args?: GetCachePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetCachePolicyResult>;
/**
 * A collection of arguments for invoking getCachePolicy.
 */
export interface GetCachePolicyArgs {
    /**
     * The identifier for the cache policy.
     */
    id?: string;
    /**
     * A unique name to identify the cache policy.
     */
    name?: string;
}
/**
 * A collection of values returned by getCachePolicy.
 */
export interface GetCachePolicyResult {
    /**
     * A comment to describe the cache policy.
     */
    readonly comment: string;
    /**
     * The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    readonly defaultTtl: number;
    /**
     * The current version of the cache policy.
     */
    readonly etag: string;
    readonly id?: string;
    /**
     * The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    readonly maxTtl: number;
    /**
     * The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    readonly minTtl: number;
    readonly name?: string;
    /**
     * The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
     */
    readonly parametersInCacheKeyAndForwardedToOrigins: outputs.cloudfront.GetCachePolicyParametersInCacheKeyAndForwardedToOrigin[];
}
export declare function getCachePolicyOutput(args?: GetCachePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCachePolicyResult>;
/**
 * A collection of arguments for invoking getCachePolicy.
 */
export interface GetCachePolicyOutputArgs {
    /**
     * The identifier for the cache policy.
     */
    id?: pulumi.Input<string>;
    /**
     * A unique name to identify the cache policy.
     */
    name?: pulumi.Input<string>;
}
