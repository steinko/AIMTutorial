"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./gatewayRoute"), exports);
__exportStar(require("./getMesh"), exports);
__exportStar(require("./getVirtualService"), exports);
__exportStar(require("./mesh"), exports);
__exportStar(require("./route"), exports);
__exportStar(require("./virtualGateway"), exports);
__exportStar(require("./virtualNode"), exports);
__exportStar(require("./virtualRouter"), exports);
__exportStar(require("./virtualService"), exports);
// Import resources to register:
const gatewayRoute_1 = require("./gatewayRoute");
const mesh_1 = require("./mesh");
const route_1 = require("./route");
const virtualGateway_1 = require("./virtualGateway");
const virtualNode_1 = require("./virtualNode");
const virtualRouter_1 = require("./virtualRouter");
const virtualService_1 = require("./virtualService");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:appmesh/gatewayRoute:GatewayRoute":
                return new gatewayRoute_1.GatewayRoute(name, undefined, { urn });
            case "aws:appmesh/mesh:Mesh":
                return new mesh_1.Mesh(name, undefined, { urn });
            case "aws:appmesh/route:Route":
                return new route_1.Route(name, undefined, { urn });
            case "aws:appmesh/virtualGateway:VirtualGateway":
                return new virtualGateway_1.VirtualGateway(name, undefined, { urn });
            case "aws:appmesh/virtualNode:VirtualNode":
                return new virtualNode_1.VirtualNode(name, undefined, { urn });
            case "aws:appmesh/virtualRouter:VirtualRouter":
                return new virtualRouter_1.VirtualRouter(name, undefined, { urn });
            case "aws:appmesh/virtualService:VirtualService":
                return new virtualService_1.VirtualService(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "appmesh/gatewayRoute", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/mesh", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/route", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/virtualGateway", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/virtualNode", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/virtualRouter", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/virtualService", _module);
//# sourceMappingURL=index.js.map