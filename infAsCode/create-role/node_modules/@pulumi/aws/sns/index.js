"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./getTopic"), exports);
__exportStar(require("./platformApplication"), exports);
__exportStar(require("./smsPreferences"), exports);
__exportStar(require("./snsMixins"), exports);
__exportStar(require("./topic"), exports);
__exportStar(require("./topicPolicy"), exports);
__exportStar(require("./topicSubscription"), exports);
// Import resources to register:
const platformApplication_1 = require("./platformApplication");
const smsPreferences_1 = require("./smsPreferences");
const topic_1 = require("./topic");
const topicPolicy_1 = require("./topicPolicy");
const topicSubscription_1 = require("./topicSubscription");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:sns/platformApplication:PlatformApplication":
                return new platformApplication_1.PlatformApplication(name, undefined, { urn });
            case "aws:sns/smsPreferences:SmsPreferences":
                return new smsPreferences_1.SmsPreferences(name, undefined, { urn });
            case "aws:sns/topic:Topic":
                return new topic_1.Topic(name, undefined, { urn });
            case "aws:sns/topicPolicy:TopicPolicy":
                return new topicPolicy_1.TopicPolicy(name, undefined, { urn });
            case "aws:sns/topicSubscription:TopicSubscription":
                return new topicSubscription_1.TopicSubscription(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "sns/platformApplication", _module);
pulumi.runtime.registerResourceModule("aws", "sns/smsPreferences", _module);
pulumi.runtime.registerResourceModule("aws", "sns/topic", _module);
pulumi.runtime.registerResourceModule("aws", "sns/topicPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "sns/topicSubscription", _module);
//# sourceMappingURL=index.js.map