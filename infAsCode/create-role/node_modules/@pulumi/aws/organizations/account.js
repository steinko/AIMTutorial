"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Account = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to create a member account in the current organization.
 *
 * > **Note:** Account management must be done from the organization's master account.
 *
 * !> **WARNING:** Deleting this resource will only remove an AWS account from an organization. This provider will not close the account. The member account must be prepared to be a standalone account beforehand. See the [AWS Organizations documentation](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html) for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const account = new aws.organizations.Account("account", {
 *     email: "john@doe.org",
 * });
 * ```
 *
 * ## Import
 *
 * The AWS member account can be imported by using the `account_id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:organizations/account:Account my_org 111111111111
 * ```
 *
 *  Certain resource arguments, like `role_name`, do not have an Organizations API method for reading the information after account creation. If the argument is set in the this provider configuration on an imported resource, this provider will always show a difference. To workaround this behavior, either omit the argument from the this provider configuration or use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to hide the difference, e.g. terraform resource "aws_organizations_account" "account" {
 *
 *  name
 *
 * = "my_new_account"
 *
 *  email
 *
 *  = "john@doe.org"
 *
 *  role_name = "myOrganizationRole"
 *
 * # There is no AWS Organizations API for reading role_name
 *
 *  lifecycle {
 *
 *  ignore_changes = [role_name]
 *
 *  } }
 */
class Account extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["email"] = state ? state.email : undefined;
            inputs["iamUserAccessToBilling"] = state ? state.iamUserAccessToBilling : undefined;
            inputs["joinedMethod"] = state ? state.joinedMethod : undefined;
            inputs["joinedTimestamp"] = state ? state.joinedTimestamp : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["parentId"] = state ? state.parentId : undefined;
            inputs["roleName"] = state ? state.roleName : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tagsAll"] = state ? state.tagsAll : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            inputs["email"] = args ? args.email : undefined;
            inputs["iamUserAccessToBilling"] = args ? args.iamUserAccessToBilling : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["parentId"] = args ? args.parentId : undefined;
            inputs["roleName"] = args ? args.roleName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["joinedMethod"] = undefined /*out*/;
            inputs["joinedTimestamp"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["tagsAll"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Account.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Account(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }
}
exports.Account = Account;
/** @internal */
Account.__pulumiType = 'aws:organizations/account:Account';
//# sourceMappingURL=account.js.map