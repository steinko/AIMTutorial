"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./alias"), exports);
__exportStar(require("./codeSigningConfig"), exports);
__exportStar(require("./eventSourceMapping"), exports);
__exportStar(require("./function"), exports);
__exportStar(require("./functionEventInvokeConfig"), exports);
__exportStar(require("./getAlias"), exports);
__exportStar(require("./getCodeSigningConfig"), exports);
__exportStar(require("./getFunction"), exports);
__exportStar(require("./getInvocation"), exports);
__exportStar(require("./getLayerVersion"), exports);
__exportStar(require("./lambdaMixins"), exports);
__exportStar(require("./layerVersion"), exports);
__exportStar(require("./layerVersionPermission"), exports);
__exportStar(require("./permission"), exports);
__exportStar(require("./provisionedConcurrencyConfig"), exports);
__exportStar(require("./runtimes"), exports);
// Export enums:
__exportStar(require("../types/enums/lambda"), exports);
// Import resources to register:
const alias_1 = require("./alias");
const codeSigningConfig_1 = require("./codeSigningConfig");
const eventSourceMapping_1 = require("./eventSourceMapping");
const function_1 = require("./function");
const functionEventInvokeConfig_1 = require("./functionEventInvokeConfig");
const layerVersion_1 = require("./layerVersion");
const layerVersionPermission_1 = require("./layerVersionPermission");
const permission_1 = require("./permission");
const provisionedConcurrencyConfig_1 = require("./provisionedConcurrencyConfig");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:lambda/alias:Alias":
                return new alias_1.Alias(name, undefined, { urn });
            case "aws:lambda/codeSigningConfig:CodeSigningConfig":
                return new codeSigningConfig_1.CodeSigningConfig(name, undefined, { urn });
            case "aws:lambda/eventSourceMapping:EventSourceMapping":
                return new eventSourceMapping_1.EventSourceMapping(name, undefined, { urn });
            case "aws:lambda/function:Function":
                return new function_1.Function(name, undefined, { urn });
            case "aws:lambda/functionEventInvokeConfig:FunctionEventInvokeConfig":
                return new functionEventInvokeConfig_1.FunctionEventInvokeConfig(name, undefined, { urn });
            case "aws:lambda/layerVersion:LayerVersion":
                return new layerVersion_1.LayerVersion(name, undefined, { urn });
            case "aws:lambda/layerVersionPermission:LayerVersionPermission":
                return new layerVersionPermission_1.LayerVersionPermission(name, undefined, { urn });
            case "aws:lambda/permission:Permission":
                return new permission_1.Permission(name, undefined, { urn });
            case "aws:lambda/provisionedConcurrencyConfig:ProvisionedConcurrencyConfig":
                return new provisionedConcurrencyConfig_1.ProvisionedConcurrencyConfig(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "lambda/alias", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/codeSigningConfig", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/eventSourceMapping", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/function", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/functionEventInvokeConfig", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/layerVersion", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/layerVersionPermission", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/permission", _module);
pulumi.runtime.registerResourceModule("aws", "lambda/provisionedConcurrencyConfig", _module);
//# sourceMappingURL=index.js.map