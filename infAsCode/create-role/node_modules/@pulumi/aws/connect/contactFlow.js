"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContactFlow = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an Amazon Connect Contact Flow resource. For more information see
 * [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
 *
 * This resource embeds or references Contact Flows specified in Amazon Connect Contact Flow Language. For more information see
 * [Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html)
 *
 * !> **WARN:** Contact Flows exported from the Console [Contact Flow import/export](https://docs.aws.amazon.com/connect/latest/adminguide/contact-flow-import-export.html) are not in the Amazon Connect Contact Flow Language and can not be used with this resource. Instead, the recommendation is to use the AWS CLI [`describe-contact-flow`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/connect/describe-contact-flow.html).
 * See example below which uses `jq` to extract the `Content` attribute and saves it to a local file.
 *
 * > **NOTE:** Due to The behaviour of Amazon Connect you cannot delete contact flows. The [recommendation](https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#before-create-contact-flow) is to prefix the Contact Flow with `zzTrash_` to get obsolete contact flows out of the way.
 *
 * ## Example Usage
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.connect.ContactFlow("test", {
 *     content: `	{
 * 		"Version": "2019-10-30",
 * 		"StartAction": "12345678-1234-1234-1234-123456789012",
 * 		"Actions": [
 * 			{
 * 				"Identifier": "12345678-1234-1234-1234-123456789012",
 * 				"Type": "MessageParticipant",
 * 				"Transitions": {
 * 					"NextAction": "abcdef-abcd-abcd-abcd-abcdefghijkl",
 * 					"Errors": [],
 * 					"Conditions": []
 * 				},
 * 				"Parameters": {
 * 					"Text": "Thanks for calling the sample flow!"
 * 				}
 * 			},
 * 			{
 * 				"Identifier": "abcdef-abcd-abcd-abcd-abcdefghijkl",
 * 				"Type": "DisconnectParticipant",
 * 				"Transitions": {},
 * 				"Parameters": {}
 * 			}
 * 		]
 * 	}
 * 	`,
 *     description: "Test Contact Flow Description",
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 *     tags: {
 *         Application: "Terraform",
 *         Method: "Create",
 *         Name: "Test Contact Flow",
 *     },
 *     type: "CONTACT_FLOW",
 * });
 * ```
 *
 * ## Import
 *
 * Amazon Connect Contact Flows can be imported using the `instance_id` and `contact_flow_id` separated by a colon (`:`), e.g.,
 *
 * ```sh
 *  $ pulumi import aws:connect/contactFlow:ContactFlow example f1288a1f-6193-445a-b47e-af739b2:c1d4e5f6-1b3c-1b3c-1b3c-c1d4e5f6c1d4e5
 * ```
 */
class ContactFlow extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["contactFlowId"] = state ? state.contactFlowId : undefined;
            inputs["content"] = state ? state.content : undefined;
            inputs["contentHash"] = state ? state.contentHash : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["filename"] = state ? state.filename : undefined;
            inputs["instanceId"] = state ? state.instanceId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tagsAll"] = state ? state.tagsAll : undefined;
            inputs["type"] = state ? state.type : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            inputs["content"] = args ? args.content : undefined;
            inputs["contentHash"] = args ? args.contentHash : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["filename"] = args ? args.filename : undefined;
            inputs["instanceId"] = args ? args.instanceId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["contactFlowId"] = undefined /*out*/;
            inputs["tagsAll"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(ContactFlow.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ContactFlow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ContactFlow(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ContactFlow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContactFlow.__pulumiType;
    }
}
exports.ContactFlow = ContactFlow;
/** @internal */
ContactFlow.__pulumiType = 'aws:connect/contactFlow:ContactFlow';
//# sourceMappingURL=contactFlow.js.map