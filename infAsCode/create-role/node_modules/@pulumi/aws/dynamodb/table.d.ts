import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Provides a DynamoDB table resource
 *
 * > **Note:** It is recommended to use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) for `readCapacity` and/or `writeCapacity` if there's `autoscaling policy` attached to the table.
 *
 * ## Example Usage
 *
 * The following dynamodb table description models the table and GSI shown
 * in the [AWS SDK example documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const basic_dynamodb_table = new aws.dynamodb.Table("basic-dynamodb-table", {
 *     attributes: [
 *         {
 *             name: "UserId",
 *             type: "S",
 *         },
 *         {
 *             name: "GameTitle",
 *             type: "S",
 *         },
 *         {
 *             name: "TopScore",
 *             type: "N",
 *         },
 *     ],
 *     billingMode: "PROVISIONED",
 *     globalSecondaryIndexes: [{
 *         hashKey: "GameTitle",
 *         name: "GameTitleIndex",
 *         nonKeyAttributes: ["UserId"],
 *         projectionType: "INCLUDE",
 *         rangeKey: "TopScore",
 *         readCapacity: 10,
 *         writeCapacity: 10,
 *     }],
 *     hashKey: "UserId",
 *     rangeKey: "GameTitle",
 *     readCapacity: 20,
 *     tags: {
 *         Environment: "production",
 *         Name: "dynamodb-table-1",
 *     },
 *     ttl: {
 *         attributeName: "TimeToExist",
 *         enabled: false,
 *     },
 *     writeCapacity: 20,
 * });
 * ```
 * ### Global Tables
 *
 * This resource implements support for [DynamoDB Global Tables V2 (version 2019.11.21)](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html) via `replica` configuration blocks. For working with [DynamoDB Global Tables V1 (version 2017.11.29)](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html), see the `aws.dynamodb.GlobalTable` resource.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.dynamodb.Table("example", {
 *     attributes: [{
 *         name: "TestTableHashKey",
 *         type: "S",
 *     }],
 *     billingMode: "PAY_PER_REQUEST",
 *     hashKey: "TestTableHashKey",
 *     replicas: [
 *         {
 *             regionName: "us-east-2",
 *         },
 *         {
 *             regionName: "us-west-2",
 *         },
 *     ],
 *     streamEnabled: true,
 *     streamViewType: "NEW_AND_OLD_IMAGES",
 * });
 * ```
 *
 * ## Import
 *
 * DynamoDB tables can be imported using the `name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:dynamodb/table:Table basic-dynamodb-table GameScores
 * ```
 */
export declare class Table extends pulumi.CustomResource {
    /**
     * Get an existing Table resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TableState, opts?: pulumi.CustomResourceOptions): Table;
    /**
     * Returns true if the given object is an instance of Table.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Table;
    /**
     * The arn of the table
     */
    readonly arn: pulumi.Output<string>;
    /**
     * List of nested attribute definitions. Only required for `hashKey` and `rangeKey` attributes. Each attribute has two properties:
     */
    readonly attributes: pulumi.Output<outputs.dynamodb.TableAttribute[]>;
    /**
     * Controls how you are charged for read and write throughput and how you manage capacity. The valid values are `PROVISIONED` and `PAY_PER_REQUEST`. Defaults to `PROVISIONED`.
     */
    readonly billingMode: pulumi.Output<string | undefined>;
    /**
     * Describe a GSI for the table;
     * subject to the normal limits on the number of GSIs, projected
     * attributes, etc.
     */
    readonly globalSecondaryIndexes: pulumi.Output<outputs.dynamodb.TableGlobalSecondaryIndex[] | undefined>;
    /**
     * The name of the hash key in the index; must be
     * defined as an attribute in the resource.
     */
    readonly hashKey: pulumi.Output<string>;
    /**
     * Describe an LSI on the table;
     * these can only be allocated *at creation* so you cannot change this
     * definition after you have created the resource.
     */
    readonly localSecondaryIndexes: pulumi.Output<outputs.dynamodb.TableLocalSecondaryIndex[] | undefined>;
    /**
     * The name of the index
     */
    readonly name: pulumi.Output<string>;
    /**
     * Point-in-time recovery options.
     */
    readonly pointInTimeRecovery: pulumi.Output<outputs.dynamodb.TablePointInTimeRecovery>;
    /**
     * The name of the range key; must be defined
     */
    readonly rangeKey: pulumi.Output<string | undefined>;
    /**
     * The number of read units for this index. Must be set if billingMode is set to PROVISIONED.
     */
    readonly readCapacity: pulumi.Output<number | undefined>;
    /**
     * Configuration block(s) with [DynamoDB Global Tables V2 (version 2019.11.21)](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html) replication configurations. Detailed below.
     */
    readonly replicas: pulumi.Output<outputs.dynamodb.TableReplica[] | undefined>;
    /**
     * Encryption at rest options. AWS DynamoDB tables are automatically encrypted at rest with an AWS owned Customer Master Key if this argument isn't specified.
     */
    readonly serverSideEncryption: pulumi.Output<outputs.dynamodb.TableServerSideEncryption>;
    /**
     * The ARN of the Table Stream. Only available when `streamEnabled = true`
     */
    readonly streamArn: pulumi.Output<string>;
    /**
     * Indicates whether Streams are to be enabled (true) or disabled (false).
     */
    readonly streamEnabled: pulumi.Output<boolean | undefined>;
    /**
     * A timestamp, in ISO 8601 format, for this stream. Note that this timestamp is not
     * a unique identifier for the stream on its own. However, the combination of AWS customer ID,
     * table name and this field is guaranteed to be unique.
     * It can be used for creating CloudWatch Alarms. Only available when `streamEnabled = true`
     */
    readonly streamLabel: pulumi.Output<string>;
    /**
     * When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are `KEYS_ONLY`, `NEW_IMAGE`, `OLD_IMAGE`, `NEW_AND_OLD_IMAGES`.
     */
    readonly streamViewType: pulumi.Output<string>;
    /**
     * A map of tags to populate on the created table. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Defines ttl, has two properties, and can only be specified once:
     */
    readonly ttl: pulumi.Output<outputs.dynamodb.TableTtl | undefined>;
    /**
     * The number of write units for this index. Must be set if billingMode is set to PROVISIONED.
     */
    readonly writeCapacity: pulumi.Output<number | undefined>;
    /**
     * Create a Table resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TableArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Table resources.
 */
export interface TableState {
    /**
     * The arn of the table
     */
    arn?: pulumi.Input<string>;
    /**
     * List of nested attribute definitions. Only required for `hashKey` and `rangeKey` attributes. Each attribute has two properties:
     */
    attributes?: pulumi.Input<pulumi.Input<inputs.dynamodb.TableAttribute>[]>;
    /**
     * Controls how you are charged for read and write throughput and how you manage capacity. The valid values are `PROVISIONED` and `PAY_PER_REQUEST`. Defaults to `PROVISIONED`.
     */
    billingMode?: pulumi.Input<string>;
    /**
     * Describe a GSI for the table;
     * subject to the normal limits on the number of GSIs, projected
     * attributes, etc.
     */
    globalSecondaryIndexes?: pulumi.Input<pulumi.Input<inputs.dynamodb.TableGlobalSecondaryIndex>[]>;
    /**
     * The name of the hash key in the index; must be
     * defined as an attribute in the resource.
     */
    hashKey?: pulumi.Input<string>;
    /**
     * Describe an LSI on the table;
     * these can only be allocated *at creation* so you cannot change this
     * definition after you have created the resource.
     */
    localSecondaryIndexes?: pulumi.Input<pulumi.Input<inputs.dynamodb.TableLocalSecondaryIndex>[]>;
    /**
     * The name of the index
     */
    name?: pulumi.Input<string>;
    /**
     * Point-in-time recovery options.
     */
    pointInTimeRecovery?: pulumi.Input<inputs.dynamodb.TablePointInTimeRecovery>;
    /**
     * The name of the range key; must be defined
     */
    rangeKey?: pulumi.Input<string>;
    /**
     * The number of read units for this index. Must be set if billingMode is set to PROVISIONED.
     */
    readCapacity?: pulumi.Input<number>;
    /**
     * Configuration block(s) with [DynamoDB Global Tables V2 (version 2019.11.21)](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html) replication configurations. Detailed below.
     */
    replicas?: pulumi.Input<pulumi.Input<inputs.dynamodb.TableReplica>[]>;
    /**
     * Encryption at rest options. AWS DynamoDB tables are automatically encrypted at rest with an AWS owned Customer Master Key if this argument isn't specified.
     */
    serverSideEncryption?: pulumi.Input<inputs.dynamodb.TableServerSideEncryption>;
    /**
     * The ARN of the Table Stream. Only available when `streamEnabled = true`
     */
    streamArn?: pulumi.Input<string>;
    /**
     * Indicates whether Streams are to be enabled (true) or disabled (false).
     */
    streamEnabled?: pulumi.Input<boolean>;
    /**
     * A timestamp, in ISO 8601 format, for this stream. Note that this timestamp is not
     * a unique identifier for the stream on its own. However, the combination of AWS customer ID,
     * table name and this field is guaranteed to be unique.
     * It can be used for creating CloudWatch Alarms. Only available when `streamEnabled = true`
     */
    streamLabel?: pulumi.Input<string>;
    /**
     * When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are `KEYS_ONLY`, `NEW_IMAGE`, `OLD_IMAGE`, `NEW_AND_OLD_IMAGES`.
     */
    streamViewType?: pulumi.Input<string>;
    /**
     * A map of tags to populate on the created table. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Defines ttl, has two properties, and can only be specified once:
     */
    ttl?: pulumi.Input<inputs.dynamodb.TableTtl>;
    /**
     * The number of write units for this index. Must be set if billingMode is set to PROVISIONED.
     */
    writeCapacity?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a Table resource.
 */
export interface TableArgs {
    /**
     * List of nested attribute definitions. Only required for `hashKey` and `rangeKey` attributes. Each attribute has two properties:
     */
    attributes: pulumi.Input<pulumi.Input<inputs.dynamodb.TableAttribute>[]>;
    /**
     * Controls how you are charged for read and write throughput and how you manage capacity. The valid values are `PROVISIONED` and `PAY_PER_REQUEST`. Defaults to `PROVISIONED`.
     */
    billingMode?: pulumi.Input<string>;
    /**
     * Describe a GSI for the table;
     * subject to the normal limits on the number of GSIs, projected
     * attributes, etc.
     */
    globalSecondaryIndexes?: pulumi.Input<pulumi.Input<inputs.dynamodb.TableGlobalSecondaryIndex>[]>;
    /**
     * The name of the hash key in the index; must be
     * defined as an attribute in the resource.
     */
    hashKey: pulumi.Input<string>;
    /**
     * Describe an LSI on the table;
     * these can only be allocated *at creation* so you cannot change this
     * definition after you have created the resource.
     */
    localSecondaryIndexes?: pulumi.Input<pulumi.Input<inputs.dynamodb.TableLocalSecondaryIndex>[]>;
    /**
     * The name of the index
     */
    name?: pulumi.Input<string>;
    /**
     * Point-in-time recovery options.
     */
    pointInTimeRecovery?: pulumi.Input<inputs.dynamodb.TablePointInTimeRecovery>;
    /**
     * The name of the range key; must be defined
     */
    rangeKey?: pulumi.Input<string>;
    /**
     * The number of read units for this index. Must be set if billingMode is set to PROVISIONED.
     */
    readCapacity?: pulumi.Input<number>;
    /**
     * Configuration block(s) with [DynamoDB Global Tables V2 (version 2019.11.21)](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html) replication configurations. Detailed below.
     */
    replicas?: pulumi.Input<pulumi.Input<inputs.dynamodb.TableReplica>[]>;
    /**
     * Encryption at rest options. AWS DynamoDB tables are automatically encrypted at rest with an AWS owned Customer Master Key if this argument isn't specified.
     */
    serverSideEncryption?: pulumi.Input<inputs.dynamodb.TableServerSideEncryption>;
    /**
     * Indicates whether Streams are to be enabled (true) or disabled (false).
     */
    streamEnabled?: pulumi.Input<boolean>;
    /**
     * When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are `KEYS_ONLY`, `NEW_IMAGE`, `OLD_IMAGE`, `NEW_AND_OLD_IMAGES`.
     */
    streamViewType?: pulumi.Input<string>;
    /**
     * A map of tags to populate on the created table. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Defines ttl, has two properties, and can only be specified once:
     */
    ttl?: pulumi.Input<inputs.dynamodb.TableTtl>;
    /**
     * The number of write units for this index. Must be set if billingMode is set to PROVISIONED.
     */
    writeCapacity?: pulumi.Input<number>;
}
