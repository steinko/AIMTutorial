import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Use this data source to get IDs of Amazon VPC peering connections
 * To get more details on each connection, use the data resource `aws.ec2.VpcPeeringConnection`
 */
export declare function getVpcPeeringConnections(args?: GetVpcPeeringConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcPeeringConnectionsResult>;
/**
 * A collection of arguments for invoking getVpcPeeringConnections.
 */
export interface GetVpcPeeringConnectionsArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: inputs.ec2.GetVpcPeeringConnectionsFilter[];
    /**
     * A mapping of tags, each pair of which must exactly match
     * a pair on the desired VPC Peering Connection.
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getVpcPeeringConnections.
 */
export interface GetVpcPeeringConnectionsResult {
    readonly filters?: outputs.ec2.GetVpcPeeringConnectionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The IDs of the VPC Peering Connections.
     */
    readonly ids: string[];
    readonly tags: {
        [key: string]: string;
    };
}
export declare function getVpcPeeringConnectionsOutput(args?: GetVpcPeeringConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcPeeringConnectionsResult>;
/**
 * A collection of arguments for invoking getVpcPeeringConnections.
 */
export interface GetVpcPeeringConnectionsOutputArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetVpcPeeringConnectionsFilterArgs>[]>;
    /**
     * A mapping of tags, each pair of which must exactly match
     * a pair on the desired VPC Peering Connection.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
