import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Provides details about a specific EC2 Customer-Owned IP Pool.
 *
 * This data source can prove useful when a module accepts a coip pool id as
 * an input variable and needs to, for example, determine the CIDR block of that
 * COIP Pool.
 *
 * ## Example Usage
 *
 * The following example returns a specific coip pool ID
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const config = new pulumi.Config();
 * const coipPoolId = config.requireObject("coipPoolId");
 * const selected = aws.ec2.getCoipPool({
 *     id: coipPoolId,
 * });
 * ```
 */
export declare function getCoipPool(args?: GetCoipPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetCoipPoolResult>;
/**
 * A collection of arguments for invoking getCoipPool.
 */
export interface GetCoipPoolArgs {
    filters?: inputs.ec2.GetCoipPoolFilter[];
    /**
     * Local Gateway Route Table Id assigned to desired COIP Pool
     */
    localGatewayRouteTableId?: string;
    /**
     * The id of the specific COIP Pool to retrieve.
     */
    poolId?: string;
    /**
     * A mapping of tags, each pair of which must exactly match
     * a pair on the desired COIP Pool.
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getCoipPool.
 */
export interface GetCoipPoolResult {
    /**
     * ARN of the COIP pool
     */
    readonly arn: string;
    readonly filters?: outputs.ec2.GetCoipPoolFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly localGatewayRouteTableId: string;
    /**
     * Set of CIDR blocks in pool
     */
    readonly poolCidrs: string[];
    readonly poolId: string;
    readonly tags: {
        [key: string]: string;
    };
}
export declare function getCoipPoolOutput(args?: GetCoipPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoipPoolResult>;
/**
 * A collection of arguments for invoking getCoipPool.
 */
export interface GetCoipPoolOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetCoipPoolFilterArgs>[]>;
    /**
     * Local Gateway Route Table Id assigned to desired COIP Pool
     */
    localGatewayRouteTableId?: pulumi.Input<string>;
    /**
     * The id of the specific COIP Pool to retrieve.
     */
    poolId?: pulumi.Input<string>;
    /**
     * A mapping of tags, each pair of which must exactly match
     * a pair on the desired COIP Pool.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
