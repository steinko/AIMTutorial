import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * ## Example Usage
 *
 * The following shows outputing all network ACL ids in a vpc.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleNetworkAcls = aws.ec2.getNetworkAcls({
 *     vpcId: _var.vpc_id,
 * });
 * export const example = exampleNetworkAcls.then(exampleNetworkAcls => exampleNetworkAcls.ids);
 * ```
 *
 * The following example retrieves a list of all network ACL ids in a VPC with a custom
 * tag of `Tier` set to a value of "Private".
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getNetworkAcls({
 *     vpcId: _var.vpc_id,
 *     tags: {
 *         Tier: "Private",
 *     },
 * });
 * ```
 *
 * The following example retrieves a network ACL id in a VPC which associated
 * with specific subnet.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getNetworkAcls({
 *     vpcId: _var.vpc_id,
 *     filters: [{
 *         name: "association.subnet-id",
 *         values: [aws_subnet.test.id],
 *     }],
 * });
 * ```
 */
export declare function getNetworkAcls(args?: GetNetworkAclsArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkAclsResult>;
/**
 * A collection of arguments for invoking getNetworkAcls.
 */
export interface GetNetworkAclsArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: inputs.ec2.GetNetworkAclsFilter[];
    /**
     * A map of tags, each pair of which must exactly match
     * a pair on the desired network ACLs.
     */
    tags?: {
        [key: string]: string;
    };
    /**
     * The VPC ID that you want to filter from.
     */
    vpcId?: string;
}
/**
 * A collection of values returned by getNetworkAcls.
 */
export interface GetNetworkAclsResult {
    readonly filters?: outputs.ec2.GetNetworkAclsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of all the network ACL ids found. This data source will fail if none are found.
     */
    readonly ids: string[];
    readonly tags: {
        [key: string]: string;
    };
    readonly vpcId?: string;
}
export declare function getNetworkAclsOutput(args?: GetNetworkAclsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkAclsResult>;
/**
 * A collection of arguments for invoking getNetworkAcls.
 */
export interface GetNetworkAclsOutputArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetNetworkAclsFilterArgs>[]>;
    /**
     * A map of tags, each pair of which must exactly match
     * a pair on the desired network ACLs.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The VPC ID that you want to filter from.
     */
    vpcId?: pulumi.Input<string>;
}
