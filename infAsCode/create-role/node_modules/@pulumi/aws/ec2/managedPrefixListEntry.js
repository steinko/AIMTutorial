"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagedPrefixListEntry = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Import
 *
 * Prefix List Entries can be imported using the `prefix_list_id` and `cidr` separated by a `,`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:ec2/managedPrefixListEntry:ManagedPrefixListEntry default pl-0570a1d2d725c16be,10.0.3.0/24
 * ```
 */
class ManagedPrefixListEntry extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["cidr"] = state ? state.cidr : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["prefixListId"] = state ? state.prefixListId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.cidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidr'");
            }
            if ((!args || args.prefixListId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'prefixListId'");
            }
            inputs["cidr"] = args ? args.cidr : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["prefixListId"] = args ? args.prefixListId : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(ManagedPrefixListEntry.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ManagedPrefixListEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ManagedPrefixListEntry(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ManagedPrefixListEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedPrefixListEntry.__pulumiType;
    }
}
exports.ManagedPrefixListEntry = ManagedPrefixListEntry;
/** @internal */
ManagedPrefixListEntry.__pulumiType = 'aws:ec2/managedPrefixListEntry:ManagedPrefixListEntry';
//# sourceMappingURL=managedPrefixListEntry.js.map