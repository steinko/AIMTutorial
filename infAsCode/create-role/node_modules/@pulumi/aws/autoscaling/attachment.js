"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Attachment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an Auto Scaling Attachment resource.
 *
 * > **NOTE on Auto Scaling Groups and ASG Attachments:** This provider currently provides
 * both a standalone `aws.autoscaling.Attachment` resource
 * (describing an ASG attached to an ELB or ALB), and an `aws.autoscaling.Group`
 * with `loadBalancers` and `targetGroupArns` defined in-line. These two methods are not
 * mutually-exclusive. If `aws.autoscaling.Attachment` resources are used, either alone or with inline
 * `loadBalancers` or `targetGroupArns`, the `aws.autoscaling.Group` resource must be configured
 * to [ignore changes](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to the `loadBalancers` and `targetGroupArns` arguments.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * // Create a new load balancer attachment
 * const asgAttachmentBar = new aws.autoscaling.Attachment("asgAttachmentBar", {
 *     autoscalingGroupName: aws_autoscaling_group.asg.id,
 *     elb: aws_elb.bar.id,
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * // Create a new ALB Target Group attachment
 * const asgAttachmentBar = new aws.autoscaling.Attachment("asgAttachmentBar", {
 *     autoscalingGroupName: aws_autoscaling_group.asg.id,
 *     albTargetGroupArn: aws_lb_target_group.test.arn,
 * });
 * ```
 * ## With An AutoScaling Group Resource
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * // ... other configuration ...
 * const asg = new aws.autoscaling.Group("asg", {});
 * const asgAttachmentBar = new aws.autoscaling.Attachment("asgAttachmentBar", {
 *     autoscalingGroupName: asg.id,
 *     elb: aws_elb.test.id,
 * });
 * ```
 */
class Attachment extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["albTargetGroupArn"] = state ? state.albTargetGroupArn : undefined;
            inputs["autoscalingGroupName"] = state ? state.autoscalingGroupName : undefined;
            inputs["elb"] = state ? state.elb : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.autoscalingGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoscalingGroupName'");
            }
            inputs["albTargetGroupArn"] = args ? args.albTargetGroupArn : undefined;
            inputs["autoscalingGroupName"] = args ? args.autoscalingGroupName : undefined;
            inputs["elb"] = args ? args.elb : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Attachment.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Attachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Attachment(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Attachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Attachment.__pulumiType;
    }
}
exports.Attachment = Attachment;
/** @internal */
Attachment.__pulumiType = 'aws:autoscaling/attachment:Attachment';
//# sourceMappingURL=attachment.js.map