"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./attachment"), exports);
__exportStar(require("./getAmiIds"), exports);
__exportStar(require("./getGroup"), exports);
__exportStar(require("./group"), exports);
__exportStar(require("./lifecycleHook"), exports);
__exportStar(require("./metrics"), exports);
__exportStar(require("./notification"), exports);
__exportStar(require("./notificationType"), exports);
__exportStar(require("./policy"), exports);
__exportStar(require("./schedule"), exports);
__exportStar(require("./tag"), exports);
// Export enums:
__exportStar(require("../types/enums/autoscaling"), exports);
// Import resources to register:
const attachment_1 = require("./attachment");
const group_1 = require("./group");
const lifecycleHook_1 = require("./lifecycleHook");
const notification_1 = require("./notification");
const policy_1 = require("./policy");
const schedule_1 = require("./schedule");
const tag_1 = require("./tag");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:autoscaling/attachment:Attachment":
                return new attachment_1.Attachment(name, undefined, { urn });
            case "aws:autoscaling/group:Group":
                return new group_1.Group(name, undefined, { urn });
            case "aws:autoscaling/lifecycleHook:LifecycleHook":
                return new lifecycleHook_1.LifecycleHook(name, undefined, { urn });
            case "aws:autoscaling/notification:Notification":
                return new notification_1.Notification(name, undefined, { urn });
            case "aws:autoscaling/policy:Policy":
                return new policy_1.Policy(name, undefined, { urn });
            case "aws:autoscaling/schedule:Schedule":
                return new schedule_1.Schedule(name, undefined, { urn });
            case "aws:autoscaling/tag:Tag":
                return new tag_1.Tag(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "autoscaling/attachment", _module);
pulumi.runtime.registerResourceModule("aws", "autoscaling/group", _module);
pulumi.runtime.registerResourceModule("aws", "autoscaling/lifecycleHook", _module);
pulumi.runtime.registerResourceModule("aws", "autoscaling/notification", _module);
pulumi.runtime.registerResourceModule("aws", "autoscaling/policy", _module);
pulumi.runtime.registerResourceModule("aws", "autoscaling/schedule", _module);
pulumi.runtime.registerResourceModule("aws", "autoscaling/tag", _module);
//# sourceMappingURL=index.js.map