"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Firewall = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an AWS Network Firewall Firewall Resource
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.networkfirewall.Firewall("example", {
 *     firewallPolicyArn: aws_networkfirewall_firewall_policy.example.arn,
 *     vpcId: aws_vpc.example.id,
 *     subnetMappings: [{
 *         subnetId: aws_subnet.example.id,
 *     }],
 *     tags: {
 *         Tag1: "Value1",
 *         Tag2: "Value2",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Network Firewall Firewalls can be imported using their `ARN`.
 *
 * ```sh
 *  $ pulumi import aws:networkfirewall/firewall:Firewall example arn:aws:network-firewall:us-west-1:123456789012:firewall/example
 * ```
 */
class Firewall extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["deleteProtection"] = state ? state.deleteProtection : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["firewallPolicyArn"] = state ? state.firewallPolicyArn : undefined;
            inputs["firewallPolicyChangeProtection"] = state ? state.firewallPolicyChangeProtection : undefined;
            inputs["firewallStatuses"] = state ? state.firewallStatuses : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["subnetChangeProtection"] = state ? state.subnetChangeProtection : undefined;
            inputs["subnetMappings"] = state ? state.subnetMappings : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tagsAll"] = state ? state.tagsAll : undefined;
            inputs["updateToken"] = state ? state.updateToken : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.firewallPolicyArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallPolicyArn'");
            }
            if ((!args || args.subnetMappings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetMappings'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            inputs["deleteProtection"] = args ? args.deleteProtection : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["firewallPolicyArn"] = args ? args.firewallPolicyArn : undefined;
            inputs["firewallPolicyChangeProtection"] = args ? args.firewallPolicyChangeProtection : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["subnetChangeProtection"] = args ? args.subnetChangeProtection : undefined;
            inputs["subnetMappings"] = args ? args.subnetMappings : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vpcId"] = args ? args.vpcId : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["firewallStatuses"] = undefined /*out*/;
            inputs["tagsAll"] = undefined /*out*/;
            inputs["updateToken"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Firewall.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Firewall resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Firewall(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Firewall.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Firewall.__pulumiType;
    }
}
exports.Firewall = Firewall;
/** @internal */
Firewall.__pulumiType = 'aws:networkfirewall/firewall:Firewall';
//# sourceMappingURL=firewall.js.map