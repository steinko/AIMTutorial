"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyTarget = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an RDS DB proxy target resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleProxy = new aws.rds.Proxy("exampleProxy", {
 *     debugLogging: false,
 *     engineFamily: "MYSQL",
 *     idleClientTimeout: 1800,
 *     requireTls: true,
 *     roleArn: aws_iam_role.example.arn,
 *     vpcSecurityGroupIds: [aws_security_group.example.id],
 *     vpcSubnetIds: [aws_subnet.example.id],
 *     auths: [{
 *         authScheme: "SECRETS",
 *         description: "example",
 *         iamAuth: "DISABLED",
 *         secretArn: aws_secretsmanager_secret.example.arn,
 *     }],
 *     tags: {
 *         Name: "example",
 *         Key: "value",
 *     },
 * });
 * const exampleProxyDefaultTargetGroup = new aws.rds.ProxyDefaultTargetGroup("exampleProxyDefaultTargetGroup", {
 *     dbProxyName: exampleProxy.name,
 *     connectionPoolConfig: {
 *         connectionBorrowTimeout: 120,
 *         initQuery: "SET x=1, y=2",
 *         maxConnectionsPercent: 100,
 *         maxIdleConnectionsPercent: 50,
 *         sessionPinningFilters: ["EXCLUDE_VARIABLE_SETS"],
 *     },
 * });
 * const exampleProxyTarget = new aws.rds.ProxyTarget("exampleProxyTarget", {
 *     dbInstanceIdentifier: aws_db_instance.example.id,
 *     dbProxyName: exampleProxy.name,
 *     targetGroupName: exampleProxyDefaultTargetGroup.name,
 * });
 * ```
 *
 * ## Import
 *
 * RDS DB Proxy Targets can be imported using the `db_proxy_name`, `target_group_name`, target type (e.g., `RDS_INSTANCE` or `TRACKED_CLUSTER`), and resource identifier separated by forward slashes (`/`), e.g., Instances
 *
 * ```sh
 *  $ pulumi import aws:rds/proxyTarget:ProxyTarget example example-proxy/default/RDS_INSTANCE/example-instance
 * ```
 *
 *  Provisioned Clusters
 *
 * ```sh
 *  $ pulumi import aws:rds/proxyTarget:ProxyTarget example example-proxy/default/TRACKED_CLUSTER/example-cluster
 * ```
 */
class ProxyTarget extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["dbClusterIdentifier"] = state ? state.dbClusterIdentifier : undefined;
            inputs["dbInstanceIdentifier"] = state ? state.dbInstanceIdentifier : undefined;
            inputs["dbProxyName"] = state ? state.dbProxyName : undefined;
            inputs["endpoint"] = state ? state.endpoint : undefined;
            inputs["port"] = state ? state.port : undefined;
            inputs["rdsResourceId"] = state ? state.rdsResourceId : undefined;
            inputs["targetArn"] = state ? state.targetArn : undefined;
            inputs["targetGroupName"] = state ? state.targetGroupName : undefined;
            inputs["trackedClusterId"] = state ? state.trackedClusterId : undefined;
            inputs["type"] = state ? state.type : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.dbProxyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbProxyName'");
            }
            if ((!args || args.targetGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetGroupName'");
            }
            inputs["dbClusterIdentifier"] = args ? args.dbClusterIdentifier : undefined;
            inputs["dbInstanceIdentifier"] = args ? args.dbInstanceIdentifier : undefined;
            inputs["dbProxyName"] = args ? args.dbProxyName : undefined;
            inputs["targetGroupName"] = args ? args.targetGroupName : undefined;
            inputs["endpoint"] = undefined /*out*/;
            inputs["port"] = undefined /*out*/;
            inputs["rdsResourceId"] = undefined /*out*/;
            inputs["targetArn"] = undefined /*out*/;
            inputs["trackedClusterId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(ProxyTarget.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ProxyTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ProxyTarget(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ProxyTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProxyTarget.__pulumiType;
    }
}
exports.ProxyTarget = ProxyTarget;
/** @internal */
ProxyTarget.__pulumiType = 'aws:rds/proxyTarget:ProxyTarget';
//# sourceMappingURL=proxyTarget.js.map