"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.App = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Import
 *
 * Amplify App can be imported using Amplify App ID (appId), e.g.,
 *
 * ```sh
 *  $ pulumi import aws:amplify/app:App example d2ypk4k47z8u6
 * ```
 *
 *  App ID can be obtained from App ARN (e.g., `arn:aws:amplify:us-east-1:12345678:apps/d2ypk4k47z8u6`).
 */
class App extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["accessToken"] = state ? state.accessToken : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["autoBranchCreationConfig"] = state ? state.autoBranchCreationConfig : undefined;
            inputs["autoBranchCreationPatterns"] = state ? state.autoBranchCreationPatterns : undefined;
            inputs["basicAuthCredentials"] = state ? state.basicAuthCredentials : undefined;
            inputs["buildSpec"] = state ? state.buildSpec : undefined;
            inputs["customRules"] = state ? state.customRules : undefined;
            inputs["defaultDomain"] = state ? state.defaultDomain : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["enableAutoBranchCreation"] = state ? state.enableAutoBranchCreation : undefined;
            inputs["enableBasicAuth"] = state ? state.enableBasicAuth : undefined;
            inputs["enableBranchAutoBuild"] = state ? state.enableBranchAutoBuild : undefined;
            inputs["enableBranchAutoDeletion"] = state ? state.enableBranchAutoDeletion : undefined;
            inputs["environmentVariables"] = state ? state.environmentVariables : undefined;
            inputs["iamServiceRoleArn"] = state ? state.iamServiceRoleArn : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["oauthToken"] = state ? state.oauthToken : undefined;
            inputs["platform"] = state ? state.platform : undefined;
            inputs["productionBranches"] = state ? state.productionBranches : undefined;
            inputs["repository"] = state ? state.repository : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tagsAll"] = state ? state.tagsAll : undefined;
        }
        else {
            const args = argsOrState;
            inputs["accessToken"] = args ? args.accessToken : undefined;
            inputs["autoBranchCreationConfig"] = args ? args.autoBranchCreationConfig : undefined;
            inputs["autoBranchCreationPatterns"] = args ? args.autoBranchCreationPatterns : undefined;
            inputs["basicAuthCredentials"] = args ? args.basicAuthCredentials : undefined;
            inputs["buildSpec"] = args ? args.buildSpec : undefined;
            inputs["customRules"] = args ? args.customRules : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["enableAutoBranchCreation"] = args ? args.enableAutoBranchCreation : undefined;
            inputs["enableBasicAuth"] = args ? args.enableBasicAuth : undefined;
            inputs["enableBranchAutoBuild"] = args ? args.enableBranchAutoBuild : undefined;
            inputs["enableBranchAutoDeletion"] = args ? args.enableBranchAutoDeletion : undefined;
            inputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            inputs["iamServiceRoleArn"] = args ? args.iamServiceRoleArn : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["oauthToken"] = args ? args.oauthToken : undefined;
            inputs["platform"] = args ? args.platform : undefined;
            inputs["repository"] = args ? args.repository : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["defaultDomain"] = undefined /*out*/;
            inputs["productionBranches"] = undefined /*out*/;
            inputs["tagsAll"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(App.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing App resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new App(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of App.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === App.__pulumiType;
    }
}
exports.App = App;
/** @internal */
App.__pulumiType = 'aws:amplify/app:App';
//# sourceMappingURL=app.js.map